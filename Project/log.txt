Attaching to api-gateway, broker, google-service, netflix-service, pgadmin4_container, postgres, prime-service, profile-service, service-discovery-server, user-service, zookeeper
postgres                  | The files belonging to this database system will be owned by user "postgres".
postgres                  | This user must also own the server process.
postgres                  | 
postgres                  | The database cluster will be initialized with locale "en_US.utf8".
postgres                  | The default database encoding has accordingly been set to "UTF8".
postgres                  | The default text search configuration will be set to "english".
postgres                  | 
postgres                  | Data page checksums are disabled.
postgres                  | 
postgres                  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
postgres                  | creating subdirectories ... ok
postgres                  | selecting dynamic shared memory implementation ... posix
postgres                  | selecting default max_connections ... 100
postgres                  | selecting default shared_buffers ... 128MB
postgres                  | selecting default time zone ... Etc/UTC
postgres                  | creating configuration files ... ok
zookeeper                 | ===> User
zookeeper                 | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
zookeeper                 | ===> Configuring ...
postgres                  | running bootstrap script ... ok
postgres                  | performing post-bootstrap initialization ... ok
postgres                  | syncing data to disk ... ok
postgres                  | 
postgres                  | 
postgres                  | Success. You can now start the database server using:
postgres                  | 
postgres                  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
postgres                  | 
postgres                  | waiting for server to start....2023-03-08 08:31:13.900 UTC [48] LOG:  starting PostgreSQL 15.2 (Debian 15.2-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit
postgres                  | 2023-03-08 08:31:13.900 UTC [48] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres                  | 2023-03-08 08:31:13.904 UTC [51] LOG:  database system was shut down at 2023-03-08 08:31:13 UTC
postgres                  | 2023-03-08 08:31:13.909 UTC [48] LOG:  database system is ready to accept connections
postgres                  |  done
postgres                  | server started
broker                    | ===> User
broker                    | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
broker                    | ===> Configuring ...
postgres                  | CREATE DATABASE
postgres                  | 
postgres                  | 
postgres                  | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
postgres                  | 
postgres                  | 2023-03-08 08:31:14.149 UTC [48] LOG:  received fast shutdown request
postgres                  | waiting for server to shut down....2023-03-08 08:31:14.150 UTC [48] LOG:  aborting any active transactions
postgres                  | 2023-03-08 08:31:14.152 UTC [48] LOG:  background worker "logical replication launcher" (PID 54) exited with exit code 1
postgres                  | 2023-03-08 08:31:14.153 UTC [49] LOG:  shutting down
postgres                  | 2023-03-08 08:31:14.155 UTC [49] LOG:  checkpoint starting: shutdown immediate
postgres                  | 2023-03-08 08:31:14.195 UTC [49] LOG:  checkpoint complete: wrote 918 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.021 s, sync=0.018 s, total=0.043 s; sync files=250, longest=0.001 s, average=0.001 s; distance=4217 kB, estimate=4217 kB
postgres                  | 2023-03-08 08:31:14.205 UTC [48] LOG:  database system is shut down
postgres                  |  done
postgres                  | server stopped
postgres                  | 
postgres                  | PostgreSQL init process complete; ready for start up.
postgres                  | 
service-discovery-server  | 
service-discovery-server  |   .   ____          _            __ _ _
service-discovery-server  |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
service-discovery-server  | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
service-discovery-server  |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
service-discovery-server  |   '  |____| .__|_| |_|_| |_\__, | / / / /
service-discovery-server  |  =========|_|==============|___/=/_/_/_/
service-discovery-server  |  :: Spring Boot ::                (v2.7.6)
service-discovery-server  | 
service-discovery-server  | 2023-03-08 08:31:16.732  INFO 1 --- [           main] c.b.s.ServiceDiscoveryServerApplication  : Starting ServiceDiscoveryServerApplication v0.0.1 using Java 19-ea on aacd8031ed19 with PID 1 (/servicediscoveryserver.jar started by root in /)
service-discovery-server  | 2023-03-08 08:31:16.752  INFO 1 --- [           main] c.b.s.ServiceDiscoveryServerApplication  : No active profile set, falling back to 1 default profile: "default"
zookeeper                 | ===> Running preflight checks ... 
zookeeper                 | ===> Check if /var/lib/zookeeper/data is writable ...
zookeeper                 | ===> Check if /var/lib/zookeeper/log is writable ...
zookeeper                 | ===> Launching ... 
zookeeper                 | ===> Launching zookeeper ... 
google-service            | 
google-service            |   .   ____          _            __ _ _
google-service            |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
google-service            | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
google-service            |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
google-service            |   '  |____| .__|_| |_|_| |_\__, | / / / /
google-service            |  =========|_|==============|___/=/_/_/_/
google-service            |  :: Spring Boot ::                (v2.7.7)
google-service            | 
prime-service             | 
prime-service             |   .   ____          _            __ _ _
prime-service             |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
prime-service             | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
prime-service             |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
prime-service             |   '  |____| .__|_| |_|_| |_\__, | / / / /
prime-service             |  =========|_|==============|___/=/_/_/_/
prime-service             |  :: Spring Boot ::                (v2.7.7)
prime-service             | 
google-service            | 2023-03-08 08:31:19.160  INFO 1 --- [           main] c.b.g.GoogleServiceApplication           : Starting GoogleServiceApplication v0.0.1 using Java 19-ea on 706bbfb20247 with PID 1 (/googleservice.jar started by root in /)
google-service            | 2023-03-08 08:31:19.188  INFO 1 --- [           main] c.b.g.GoogleServiceApplication           : The following 1 profile is active: "docker"
api-gateway               | 
api-gateway               |   .   ____          _            __ _ _
api-gateway               |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
api-gateway               | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
api-gateway               |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
api-gateway               |   '  |____| .__|_| |_|_| |_\__, | / / / /
api-gateway               |  =========|_|==============|___/=/_/_/_/
api-gateway               |  :: Spring Boot ::                (v2.7.7)
api-gateway               | 
netflix-service           | 
netflix-service           |   .   ____          _            __ _ _
netflix-service           |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
netflix-service           | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
netflix-service           |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
netflix-service           |   '  |____| .__|_| |_|_| |_\__, | / / / /
netflix-service           |  =========|_|==============|___/=/_/_/_/
netflix-service           |  :: Spring Boot ::                (v2.7.7)
netflix-service           | 
profile-service           | 
profile-service           |   .   ____          _            __ _ _
profile-service           |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
profile-service           | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
profile-service           |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
profile-service           |   '  |____| .__|_| |_|_| |_\__, | / / / /
profile-service           |  =========|_|==============|___/=/_/_/_/
profile-service           |  :: Spring Boot ::                (v2.7.7)
profile-service           | 
broker                    | ===> Running preflight checks ... 
broker                    | ===> Check if /var/lib/kafka/data is writable ...
user-service              | 
user-service              |   .   ____          _            __ _ _
user-service              |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
user-service              | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
user-service              |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
user-service              |   '  |____| .__|_| |_|_| |_\__, | / / / /
user-service              |  =========|_|==============|___/=/_/_/_/
user-service              |  :: Spring Boot ::                (v2.7.7)
user-service              | 
api-gateway               | 2023-03-08 08:31:19.565  INFO 1 --- [           main] c.b.apigateway.ApiGatewayApplication     : Starting ApiGatewayApplication v0.0.1 using Java 19-ea on f266cb0c59bb with PID 1 (/apigateway.jar started by root in /)
prime-service             | 2023-03-08 08:31:19.534  INFO 1 --- [           main] c.b.p.PrimeServiceApplication            : Starting PrimeServiceApplication v0.0.1 using Java 19-ea on c7be847abe5f with PID 1 (/primeservice.jar started by root in /)
prime-service             | 2023-03-08 08:31:19.570  INFO 1 --- [           main] c.b.p.PrimeServiceApplication            : The following 1 profile is active: "docker"
api-gateway               | 2023-03-08 08:31:19.573  INFO 1 --- [           main] c.b.apigateway.ApiGatewayApplication     : No active profile set, falling back to 1 default profile: "default"
netflix-service           | 2023-03-08 08:31:19.819  INFO 1 --- [           main] c.b.n.NetflixServiceApplication          : Starting NetflixServiceApplication v0.0.1 using Java 19-ea on c219c4b97707 with PID 1 (/netflixservice.jar started by root in /)
netflix-service           | 2023-03-08 08:31:19.836  INFO 1 --- [           main] c.b.n.NetflixServiceApplication          : The following 1 profile is active: "docker"
profile-service           | 2023-03-08 08:31:19.945  INFO 1 --- [           main] c.b.p.ProfileServiceApplication          : Starting ProfileServiceApplication v0.0.1 using Java 19-ea on 6b69458746a0 with PID 1 (/profileservice.jar started by root in /)
profile-service           | 2023-03-08 08:31:19.957  INFO 1 --- [           main] c.b.p.ProfileServiceApplication          : The following 1 profile is active: "docker"
user-service              | 2023-03-08 08:31:20.166  INFO 1 --- [           main] c.b.userservice.UserServiceApplication   : Starting UserServiceApplication v0.0.1 using Java 19-ea on 6d8b98f693b9 with PID 1 (/userservice.jar started by root in /)
user-service              | 2023-03-08 08:31:20.185  INFO 1 --- [           main] c.b.userservice.UserServiceApplication   : The following 1 profile is active: "docker"
broker                    | ===> Check if Zookeeper is healthy ...
zookeeper                 | [2023-03-08 08:31:20,512] INFO Reading configuration from: /etc/kafka/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,559] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,559] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,559] INFO observerMasterPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,560] INFO metricsProvider.className is org.apache.zookeeper.metrics.impl.DefaultMetricsProvider (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,564] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
zookeeper                 | [2023-03-08 08:31:20,564] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
zookeeper                 | [2023-03-08 08:31:20,568] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
zookeeper                 | [2023-03-08 08:31:20,568] WARN Either no config or no quorum defined in config, running in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
zookeeper                 | [2023-03-08 08:31:20,581] INFO Log4j 1.2 jmx support not found; jmx disabled. (org.apache.zookeeper.jmx.ManagedUtil)
zookeeper                 | [2023-03-08 08:31:20,583] INFO Reading configuration from: /etc/kafka/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,583] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,584] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,584] INFO observerMasterPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,584] INFO metricsProvider.className is org.apache.zookeeper.metrics.impl.DefaultMetricsProvider (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
zookeeper                 | [2023-03-08 08:31:20,584] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
zookeeper                 | [2023-03-08 08:31:20,652] INFO ServerMetrics initialized with provider org.apache.zookeeper.metrics.impl.DefaultMetricsProvider@46fa7c39 (org.apache.zookeeper.server.ServerMetrics)
zookeeper                 | [2023-03-08 08:31:20,674] INFO zookeeper.snapshot.trust.empty : false (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
zookeeper                 | [2023-03-08 08:31:20,730] INFO  (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,730] INFO   ______                  _                                           (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,730] INFO  |___  /                 | |                                          (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,731] INFO     / /    ___     ___   | | __   ___    ___   _ __     ___   _ __    (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,731] INFO    / /    / _ \   / _ \  | |/ /  / _ \  / _ \ | '_ \   / _ \ | '__| (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,731] INFO   / /__  | (_) | | (_) | |   <  |  __/ |  __/ | |_) | |  __/ | |     (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,731] INFO  /_____|  \___/   \___/  |_|\_\  \___|  \___| | .__/   \___| |_| (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,731] INFO                                               | |                      (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,731] INFO                                               |_|                      (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,731] INFO  (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,740] INFO Server environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:host.name=96f01ec7ef99 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:java.version=11.0.16.1 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:java.class.path=/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/swagger-annotations-2.2.0.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jline-3.21.0.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.6.0.jar:/usr/bin/../share/java/kafka/trogdor-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/connect-api-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/commons-lang3-3.12.0.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/reload4j-1.2.19.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.29.4.1.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/kafka-streams-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.13.3.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/connect-json-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/connect-transforms-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/scala-library-2.13.8.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/kafka-storage-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/jackson-core-2.13.3.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.8.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/kafka-tools-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-databind-2.13.3.jar:/usr/bin/../share/java/kafka/netty-common-4.1.79.Final.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.2-1.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jose4j-0.7.9.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/connect-runtime-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/kafka-raft-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.79.Final.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.13.3.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.4.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka-shell-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.79.Final.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/plexus-utils-3.3.0.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.13.3.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.13.3.jar:/usr/bin/../share/java/kafka/kafka-clients-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.13.3.jar:/usr/bin/../share/java/kafka/connect-mirror-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.13.3.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.13.3.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.79.Final.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:java.io.tmpdir=/tmp (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,741] INFO Server environment:os.name=Linux (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO Server environment:os.arch=amd64 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO Server environment:os.version=5.15.0-67-generic (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO Server environment:user.name=appuser (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO Server environment:user.home=/home/appuser (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO Server environment:user.dir=/home/appuser (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO Server environment:os.memory.free=494MB (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO Server environment:os.memory.max=512MB (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO Server environment:os.memory.total=512MB (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO zookeeper.enableEagerACLCheck = false (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO zookeeper.digest.enabled = true (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,742] INFO zookeeper.closeSessionTxn.enabled = true (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,743] INFO zookeeper.flushDelay=0 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,743] INFO zookeeper.maxWriteQueuePollTime=0 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,743] INFO zookeeper.maxBatchSize=1000 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,744] INFO zookeeper.intBufferStartingSizeBytes = 1024 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,745] INFO Weighed connection throttling is disabled (org.apache.zookeeper.server.BlueThrottle)
zookeeper                 | [2023-03-08 08:31:20,751] INFO minSessionTimeout set to 4000 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,751] INFO maxSessionTimeout set to 40000 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,753] INFO Response cache size is initialized with value 400. (org.apache.zookeeper.server.ResponseCache)
zookeeper                 | [2023-03-08 08:31:20,753] INFO Response cache size is initialized with value 400. (org.apache.zookeeper.server.ResponseCache)
zookeeper                 | [2023-03-08 08:31:20,759] INFO zookeeper.pathStats.slotCapacity = 60 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper                 | [2023-03-08 08:31:20,759] INFO zookeeper.pathStats.slotDuration = 15 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper                 | [2023-03-08 08:31:20,759] INFO zookeeper.pathStats.maxDepth = 6 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper                 | [2023-03-08 08:31:20,759] INFO zookeeper.pathStats.initialDelay = 5 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper                 | [2023-03-08 08:31:20,760] INFO zookeeper.pathStats.delay = 5 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper                 | [2023-03-08 08:31:20,760] INFO zookeeper.pathStats.enabled = false (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper                 | [2023-03-08 08:31:20,767] INFO The max bytes for all large requests are set to 104857600 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,769] INFO The large request threshold is set to -1 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,771] INFO Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 clientPortListenBacklog -1 datadir /var/lib/zookeeper/log/version-2 snapdir /var/lib/zookeeper/data/version-2 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:20,876] INFO Logging initialized @2201ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
zookeeper                 | [2023-03-08 08:31:21,195] WARN o.e.j.s.ServletContextHandler@69504ae9{/,null,STOPPED} contextPath ends with /* (org.eclipse.jetty.server.handler.ContextHandler)
zookeeper                 | [2023-03-08 08:31:21,196] WARN Empty contextPath (org.eclipse.jetty.server.handler.ContextHandler)
zookeeper                 | [2023-03-08 08:31:21,426] INFO jetty-9.4.48.v20220622; built: 2022-06-21T20:42:25.880Z; git: 6b67c5719d1f4371b33655ff2d047d24e171e49a; jvm 11.0.16.1+1-LTS (org.eclipse.jetty.server.Server)
zookeeper                 | [2023-03-08 08:31:21,600] INFO DefaultSessionIdManager workerName=node0 (org.eclipse.jetty.server.session)
zookeeper                 | [2023-03-08 08:31:21,602] INFO No SessionScavenger set, using defaults (org.eclipse.jetty.server.session)
zookeeper                 | [2023-03-08 08:31:21,618] INFO node0 Scavenging every 660000ms (org.eclipse.jetty.server.session)
zookeeper                 | [2023-03-08 08:31:21,628] WARN ServletContext@o.e.j.s.ServletContextHandler@69504ae9{/,null,STARTING} has uncovered http methods for path: /* (org.eclipse.jetty.security.SecurityHandler)
zookeeper                 | [2023-03-08 08:31:21,644] INFO Started o.e.j.s.ServletContextHandler@69504ae9{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
zookeeper                 | [2023-03-08 08:31:21,718] INFO Started ServerConnector@1caa0244{HTTP/1.1, (http/1.1)}{0.0.0.0:8080} (org.eclipse.jetty.server.AbstractConnector)
zookeeper                 | [2023-03-08 08:31:21,719] INFO Started @3045ms (org.eclipse.jetty.server.Server)
zookeeper                 | [2023-03-08 08:31:21,720] INFO Started AdminServer on address 0.0.0.0, port 8080 and command URL /commands (org.apache.zookeeper.server.admin.JettyAdminServer)
zookeeper                 | [2023-03-08 08:31:21,731] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
zookeeper                 | [2023-03-08 08:31:21,733] WARN maxCnxns is not configured, using default value 0. (org.apache.zookeeper.server.ServerCnxnFactory)
zookeeper                 | [2023-03-08 08:31:21,741] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 2 selector thread(s), 24 worker threads, and 64 kB direct buffers. (org.apache.zookeeper.server.NIOServerCnxnFactory)
zookeeper                 | [2023-03-08 08:31:21,749] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
zookeeper                 | [2023-03-08 08:31:21,883] INFO Using org.apache.zookeeper.server.watch.WatchManager as watch manager (org.apache.zookeeper.server.watch.WatchManagerFactory)
zookeeper                 | [2023-03-08 08:31:21,885] INFO Using org.apache.zookeeper.server.watch.WatchManager as watch manager (org.apache.zookeeper.server.watch.WatchManagerFactory)
zookeeper                 | [2023-03-08 08:31:21,897] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
zookeeper                 | [2023-03-08 08:31:21,904] INFO zookeeper.commitLogCount=500 (org.apache.zookeeper.server.ZKDatabase)
zookeeper                 | [2023-03-08 08:31:21,934] INFO zookeeper.snapshot.compression.method = CHECKED (org.apache.zookeeper.server.persistence.SnapStream)
zookeeper                 | [2023-03-08 08:31:21,934] INFO Snapshotting: 0x0 to /var/lib/zookeeper/data/version-2/snapshot.0 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
zookeeper                 | [2023-03-08 08:31:21,944] INFO Snapshot loaded in 40 ms, highest zxid is 0x0, digest is 1371985504 (org.apache.zookeeper.server.ZKDatabase)
zookeeper                 | [2023-03-08 08:31:21,945] INFO Snapshotting: 0x0 to /var/lib/zookeeper/data/version-2/snapshot.0 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
zookeeper                 | [2023-03-08 08:31:21,947] INFO Snapshot taken in 2 ms (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper                 | [2023-03-08 08:31:21,990] INFO zookeeper.request_throttler.shutdownTimeout = 10000 (org.apache.zookeeper.server.RequestThrottler)
zookeeper                 | [2023-03-08 08:31:21,991] INFO PrepRequestProcessor (sid:0) started, reconfigEnabled=false (org.apache.zookeeper.server.PrepRequestProcessor)
zookeeper                 | [2023-03-08 08:31:22,173] INFO Using checkIntervalMs=60000 maxPerMinute=10000 maxNeverUsedIntervalMs=0 (org.apache.zookeeper.server.ContainerManager)
zookeeper                 | [2023-03-08 08:31:22,174] INFO ZooKeeper audit is disabled. (org.apache.zookeeper.audit.ZKAuditProvider)
broker                    | [2023-03-08 08:31:22,745] INFO Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,746] INFO Client environment:host.name=09216a4bf7b1 (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,746] INFO Client environment:java.version=11.0.16.1 (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,747] INFO Client environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,747] INFO Client environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,747] INFO Client environment:java.class.path=/usr/share/java/cp-base-new/jackson-databind-2.13.2.2.jar:/usr/share/java/cp-base-new/scala-collection-compat_2.13-2.6.0.jar:/usr/share/java/cp-base-new/lz4-java-1.8.0.jar:/usr/share/java/cp-base-new/minimal-json-0.9.5.jar:/usr/share/java/cp-base-new/metrics-core-4.1.12.1.jar:/usr/share/java/cp-base-new/scala-library-2.13.5.jar:/usr/share/java/cp-base-new/jolokia-core-1.7.1.jar:/usr/share/java/cp-base-new/jmx_prometheus_javaagent-0.14.0.jar:/usr/share/java/cp-base-new/reload4j-1.2.19.jar:/usr/share/java/cp-base-new/audience-annotations-0.5.0.jar:/usr/share/java/cp-base-new/gson-2.9.0.jar:/usr/share/java/cp-base-new/snakeyaml-1.30.jar:/usr/share/java/cp-base-new/jolokia-jvm-1.7.1.jar:/usr/share/java/cp-base-new/zookeeper-3.6.3.jar:/usr/share/java/cp-base-new/jackson-dataformat-yaml-2.13.2.jar:/usr/share/java/cp-base-new/scala-java8-compat_2.13-1.0.2.jar:/usr/share/java/cp-base-new/metrics-core-2.2.0.jar:/usr/share/java/cp-base-new/re2j-1.6.jar:/usr/share/java/cp-base-new/disk-usage-agent-7.3.0.jar:/usr/share/java/cp-base-new/kafka-storage-api-7.3.0-ccs.jar:/usr/share/java/cp-base-new/kafka-server-common-7.3.0-ccs.jar:/usr/share/java/cp-base-new/scala-reflect-2.13.5.jar:/usr/share/java/cp-base-new/slf4j-api-1.7.36.jar:/usr/share/java/cp-base-new/paranamer-2.8.jar:/usr/share/java/cp-base-new/snappy-java-1.1.8.4.jar:/usr/share/java/cp-base-new/kafka_2.13-7.3.0-ccs.jar:/usr/share/java/cp-base-new/scala-logging_2.13-3.9.4.jar:/usr/share/java/cp-base-new/json-simple-1.1.1.jar:/usr/share/java/cp-base-new/jackson-dataformat-csv-2.13.2.jar:/usr/share/java/cp-base-new/kafka-storage-7.3.0-ccs.jar:/usr/share/java/cp-base-new/argparse4j-0.7.0.jar:/usr/share/java/cp-base-new/logredactor-1.0.10.jar:/usr/share/java/cp-base-new/logredactor-metrics-1.0.10.jar:/usr/share/java/cp-base-new/kafka-metadata-7.3.0-ccs.jar:/usr/share/java/cp-base-new/zstd-jni-1.5.2-1.jar:/usr/share/java/cp-base-new/common-utils-7.3.0.jar:/usr/share/java/cp-base-new/jackson-datatype-jdk8-2.13.2.jar:/usr/share/java/cp-base-new/commons-cli-1.4.jar:/usr/share/java/cp-base-new/jose4j-0.7.9.jar:/usr/share/java/cp-base-new/kafka-raft-7.3.0-ccs.jar:/usr/share/java/cp-base-new/utility-belt-7.3.0.jar:/usr/share/java/cp-base-new/slf4j-reload4j-1.7.36.jar:/usr/share/java/cp-base-new/jopt-simple-5.0.4.jar:/usr/share/java/cp-base-new/kafka-clients-7.3.0-ccs.jar:/usr/share/java/cp-base-new/jackson-core-2.13.2.jar:/usr/share/java/cp-base-new/zookeeper-jute-3.6.3.jar:/usr/share/java/cp-base-new/jackson-annotations-2.13.2.jar:/usr/share/java/cp-base-new/jackson-module-scala_2.13-2.13.2.jar (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,748] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,748] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,748] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,748] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,748] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,748] INFO Client environment:os.version=5.15.0-67-generic (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,748] INFO Client environment:user.name=appuser (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,748] INFO Client environment:user.home=/home/appuser (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,749] INFO Client environment:user.dir=/home/appuser (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,749] INFO Client environment:os.memory.free=238MB (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,749] INFO Client environment:os.memory.max=3960MB (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,749] INFO Client environment:os.memory.total=248MB (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,760] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=40000 watcher=io.confluent.admin.utils.ZookeeperConnectionWatcher@3c0a50da (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:22,769] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
broker                    | [2023-03-08 08:31:22,789] INFO jute.maxbuffer value is 1048575 Bytes (org.apache.zookeeper.ClientCnxnSocket)
broker                    | [2023-03-08 08:31:22,816] INFO zookeeper.request.timeout value is 0. feature enabled=false (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:31:22,854] INFO Opening socket connection to server zookeeper/172.20.0.4:2181. (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:31:22,855] INFO SASL config status: Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:31:22,884] INFO Socket connection established, initiating session, client: /172.20.0.6:51972, server: zookeeper/172.20.0.4:2181 (org.apache.zookeeper.ClientCnxn)
zookeeper                 | [2023-03-08 08:31:22,916] INFO Creating new log file: log.1 (org.apache.zookeeper.server.persistence.FileTxnLog)
broker                    | [2023-03-08 08:31:22,966] INFO Session establishment complete on server zookeeper/172.20.0.4:2181, session id = 0x100006029e70000, negotiated timeout = 40000 (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:31:23,129] INFO Session: 0x100006029e70000 closed (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:23,130] INFO EventThread shut down for session: 0x100006029e70000 (org.apache.zookeeper.ClientCnxn)
broker                    | Using log4j config /etc/kafka/log4j.properties
broker                    | ===> Launching ... 
broker                    | ===> Launching kafka ... 
service-discovery-server  | 2023-03-08 08:31:23.344  INFO 1 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=46f2cd18-8e5d-32f1-95ff-ed613981bb62
profile-service           | 2023-03-08 08:31:24.252  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
prime-service             | 2023-03-08 08:31:24.277  INFO 1 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=5812ec74-82d8-35cf-9329-ca82bb219540
api-gateway               | 2023-03-08 08:31:24.507 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayReactiveLoadBalancerClientAutoConfiguration#gatewayLoadBalancerClientFilter matched
netflix-service           | 2023-03-08 08:31:24.516  INFO 1 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c14bc44c-60dd-39b1-a618-3237b2e7bf77
api-gateway               | 2023-03-08 08:31:24.526 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayReactiveLoadBalancerClientAutoConfiguration#loadBalancerServiceInstanceCookieFilter matched
prime-service             | 2023-03-08 08:31:24.563  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
prime-service             | 2023-03-08 08:31:24.573  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
api-gateway               | 2023-03-08 08:31:24.607 TRACE 1 --- [           main] Configuration$OnVerboseDisabledCondition : Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
user-service              | 2023-03-08 08:31:24.627  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
prime-service             | 2023-03-08 08:31:24.659  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
api-gateway               | 2023-03-08 08:31:24.677 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
api-gateway               | 2023-03-08 08:31:24.678 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
api-gateway               | 2023-03-08 08:31:24.680 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
api-gateway               | 2023-03-08 08:31:24.680 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
google-service            | 2023-03-08 08:31:24.690  INFO 1 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=2e0d1452-5399-3124-b0c4-26104269d363
netflix-service           | 2023-03-08 08:31:24.824  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
service-discovery-server  | 2023-03-08 08:31:24.823  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8761 (http)
api-gateway               | 2023-03-08 08:31:24.847 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
api-gateway               | 2023-03-08 08:31:24.848 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
api-gateway               | 2023-03-08 08:31:24.848 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
api-gateway               | 2023-03-08 08:31:24.851 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
api-gateway               | 2023-03-08 08:31:24.851 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
api-gateway               | 2023-03-08 08:31:24.852 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
api-gateway               | 2023-03-08 08:31:24.853 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledGlobalFilter        : Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
api-gateway               | 2023-03-08 08:31:24.854 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
api-gateway               | 2023-03-08 08:31:24.855 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.855 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
service-discovery-server  | 2023-03-08 08:31:24.857  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
service-discovery-server  | 2023-03-08 08:31:24.858  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.69]
api-gateway               | 2023-03-08 08:31:24.858 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.859 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.860 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.861 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.862 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.862 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.864 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.864 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.866 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.867 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.870 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.872 TRACE 1 --- [           main] o.s.c.g.c.c.OnEnabledPredicate           : Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
api-gateway               | 2023-03-08 08:31:24.882 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.883 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.884 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.884 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.885 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.885 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.885 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.886 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.886 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.887 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.887 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.888 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.888 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.889 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
netflix-service           | 2023-03-08 08:31:24.904  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
netflix-service           | 2023-03-08 08:31:24.917  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
google-service            | 2023-03-08 08:31:24.937  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
google-service            | 2023-03-08 08:31:24.945  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
api-gateway               | 2023-03-08 08:31:24.953 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
google-service            | 2023-03-08 08:31:24.952  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
api-gateway               | 2023-03-08 08:31:24.954 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.971 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.971 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.973 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.985 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.986 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.987 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.988 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.988 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.989 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.989 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.990 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.991 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
api-gateway               | 2023-03-08 08:31:24.991 TRACE 1 --- [           main] o.s.c.g.c.conditional.OnEnabledFilter    : Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
service-discovery-server  | 2023-03-08 08:31:25.102  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
service-discovery-server  | 2023-03-08 08:31:25.102  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 7934 ms
profile-service           | 2023-03-08 08:31:25.168  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 869 ms. Found 1 JPA repository interfaces.
user-service              | 2023-03-08 08:31:25.488  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 814 ms. Found 2 JPA repository interfaces.
broker                    | [2023-03-08 08:31:25,523] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
prime-service             | 2023-03-08 08:31:26.181  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
prime-service             | 2023-03-08 08:31:26.216  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
prime-service             | 2023-03-08 08:31:26.217  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.70]
netflix-service           | 2023-03-08 08:31:26.287  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
netflix-service           | 2023-03-08 08:31:26.304  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
netflix-service           | 2023-03-08 08:31:26.304  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.70]
google-service            | 2023-03-08 08:31:26.380  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9191 (http)
google-service            | 2023-03-08 08:31:26.401  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
google-service            | 2023-03-08 08:31:26.402  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.70]
netflix-service           | 2023-03-08 08:31:26.588  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
netflix-service           | 2023-03-08 08:31:26.589  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 6394 ms
prime-service             | 2023-03-08 08:31:26.634  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
prime-service             | 2023-03-08 08:31:26.635  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 6705 ms
google-service            | 2023-03-08 08:31:26.670  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
google-service            | 2023-03-08 08:31:26.671  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 7212 ms
broker                    | [2023-03-08 08:31:26,695] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
api-gateway               | 2023-03-08 08:31:26.815  INFO 1 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d60dafc1-cc77-396e-946e-b97cf5cea88e
user-service              | 2023-03-08 08:31:26.830  INFO 1 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b2b08187-84fe-3ee5-b65f-4e1dce89b53e
profile-service           | 2023-03-08 08:31:26.952  INFO 1 --- [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=0915b700-8267-36d2-bb69-9d307175a232
broker                    | [2023-03-08 08:31:26,993] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
broker                    | [2023-03-08 08:31:26,996] INFO starting (kafka.server.KafkaServer)
broker                    | [2023-03-08 08:31:26,997] INFO Connecting to zookeeper on zookeeper:2181 (kafka.server.KafkaServer)
broker                    | [2023-03-08 08:31:27,026] INFO [ZooKeeperClient Kafka server] Initializing a new session to zookeeper:2181. (kafka.zookeeper.ZooKeeperClient)
broker                    | [2023-03-08 08:31:27,034] INFO Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,034] INFO Client environment:host.name=09216a4bf7b1 (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,035] INFO Client environment:java.version=11.0.16.1 (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,035] INFO Client environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,035] INFO Client environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,035] INFO Client environment:java.class.path=/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/swagger-annotations-2.2.0.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jline-3.21.0.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.6.0.jar:/usr/bin/../share/java/kafka/trogdor-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/connect-api-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/commons-lang3-3.12.0.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/reload4j-1.2.19.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.29.4.1.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/kafka-streams-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.13.3.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/connect-json-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/connect-transforms-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/scala-library-2.13.8.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/kafka-storage-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/jackson-core-2.13.3.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.8.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/kafka-tools-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-databind-2.13.3.jar:/usr/bin/../share/java/kafka/netty-common-4.1.79.Final.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.2-1.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jose4j-0.7.9.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/connect-runtime-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/kafka-raft-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.79.Final.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.13.3.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.4.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka-shell-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.79.Final.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/plexus-utils-3.3.0.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.48.v20220622.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.13.3.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.13.3.jar:/usr/bin/../share/java/kafka/kafka-clients-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.13.3.jar:/usr/bin/../share/java/kafka/connect-mirror-7.3.0-ccs.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.79.Final.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.13.3.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.13.3.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.79.Final.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,035] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,035] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,035] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,036] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,036] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,036] INFO Client environment:os.version=5.15.0-67-generic (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,036] INFO Client environment:user.name=appuser (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,036] INFO Client environment:user.home=/home/appuser (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,036] INFO Client environment:user.dir=/home/appuser (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,036] INFO Client environment:os.memory.free=1009MB (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,037] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,037] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,042] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@cd1d761 (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:31:27,078] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
broker                    | [2023-03-08 08:31:27,092] INFO zookeeper.request.timeout value is 0. feature enabled=false (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:31:27,134] INFO Opening socket connection to server zookeeper/172.20.0.4:2181. (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:31:27,136] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
broker                    | [2023-03-08 08:31:27,146] INFO Socket connection established, initiating session, client: /172.20.0.6:51984, server: zookeeper/172.20.0.4:2181 (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:31:27,164] INFO Session establishment complete on server zookeeper/172.20.0.4:2181, session id = 0x100006029e70001, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:31:27,169] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
api-gateway               | 2023-03-08 08:31:27.220  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
api-gateway               | 2023-03-08 08:31:27.247  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
api-gateway               | 2023-03-08 08:31:27.262  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
service-discovery-server  | 2023-03-08 08:31:27.649  INFO 1 --- [           main] c.s.j.s.i.a.WebApplicationImpl           : Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
user-service              | 2023-03-08 08:31:27.672  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
user-service              | 2023-03-08 08:31:27.674  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
user-service              | 2023-03-08 08:31:27.676  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
profile-service           | 2023-03-08 08:31:27.812  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
profile-service           | 2023-03-08 08:31:27.829  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
profile-service           | 2023-03-08 08:31:27.833  INFO 1 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
google-service            | 2023-03-08 08:31:27.872  INFO 1 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@19553973, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bb6ab3a, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ee2b6f9, org.springframework.security.web.header.HeaderWriterFilter@56aaaecd, org.springframework.security.web.csrf.CsrfFilter@54e22bdd, org.springframework.security.web.authentication.logout.LogoutFilter@2b5f4d54, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1c3146bc, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@56c698e3, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@37ddb69a, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7fe7c640, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@704f1591, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58fb7731, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c4748bf, org.springframework.security.web.session.SessionManagementFilter@35390ee3, org.springframework.security.web.access.ExceptionTranslationFilter@54a67a45, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5286c33a]
prime-service             | 2023-03-08 08:31:28.073  INFO 1 --- [           main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
broker                    | [2023-03-08 08:31:28,093] INFO Cluster ID = 3pcaOmuJQimSHVxSkkkE-Q (kafka.server.KafkaServer)
broker                    | [2023-03-08 08:31:28,121] WARN No meta.properties file under dir /var/lib/kafka/data/meta.properties (kafka.server.BrokerMetadataCheckpoint)
service-discovery-server  | 2023-03-08 08:31:28.124  INFO 1 --- [           main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
service-discovery-server  | 2023-03-08 08:31:28.154  INFO 1 --- [           main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
broker                    | [2023-03-08 08:31:28,365] INFO KafkaConfig values: 
broker                    | 	advertised.listeners = PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
broker                    | 	alter.config.policy.class.name = null
broker                    | 	alter.log.dirs.replication.quota.window.num = 11
broker                    | 	alter.log.dirs.replication.quota.window.size.seconds = 1
broker                    | 	authorizer.class.name = 
broker                    | 	auto.create.topics.enable = true
broker                    | 	auto.leader.rebalance.enable = true
broker                    | 	background.threads = 10
broker                    | 	broker.heartbeat.interval.ms = 2000
broker                    | 	broker.id = 1
broker                    | 	broker.id.generation.enable = true
broker                    | 	broker.rack = null
broker                    | 	broker.session.timeout.ms = 9000
broker                    | 	client.quota.callback.class = null
broker                    | 	compression.type = producer
broker                    | 	connection.failed.authentication.delay.ms = 100
broker                    | 	connections.max.idle.ms = 600000
broker                    | 	connections.max.reauth.ms = 0
broker                    | 	control.plane.listener.name = null
broker                    | 	controlled.shutdown.enable = true
broker                    | 	controlled.shutdown.max.retries = 3
broker                    | 	controlled.shutdown.retry.backoff.ms = 5000
broker                    | 	controller.listener.names = null
broker                    | 	controller.quorum.append.linger.ms = 25
broker                    | 	controller.quorum.election.backoff.max.ms = 1000
broker                    | 	controller.quorum.election.timeout.ms = 1000
broker                    | 	controller.quorum.fetch.timeout.ms = 2000
broker                    | 	controller.quorum.request.timeout.ms = 2000
broker                    | 	controller.quorum.retry.backoff.ms = 20
broker                    | 	controller.quorum.voters = []
broker                    | 	controller.quota.window.num = 11
broker                    | 	controller.quota.window.size.seconds = 1
broker                    | 	controller.socket.timeout.ms = 30000
broker                    | 	create.topic.policy.class.name = null
broker                    | 	default.replication.factor = 1
broker                    | 	delegation.token.expiry.check.interval.ms = 3600000
broker                    | 	delegation.token.expiry.time.ms = 86400000
broker                    | 	delegation.token.master.key = null
broker                    | 	delegation.token.max.lifetime.ms = 604800000
broker                    | 	delegation.token.secret.key = null
broker                    | 	delete.records.purgatory.purge.interval.requests = 1
broker                    | 	delete.topic.enable = true
broker                    | 	early.start.listeners = null
broker                    | 	fetch.max.bytes = 57671680
broker                    | 	fetch.purgatory.purge.interval.requests = 1000
broker                    | 	group.initial.rebalance.delay.ms = 3000
broker                    | 	group.max.session.timeout.ms = 1800000
broker                    | 	group.max.size = 2147483647
broker                    | 	group.min.session.timeout.ms = 6000
broker                    | 	initial.broker.registration.timeout.ms = 60000
broker                    | 	inter.broker.listener.name = null
broker                    | 	inter.broker.protocol.version = 3.3-IV3
broker                    | 	kafka.metrics.polling.interval.secs = 10
broker                    | 	kafka.metrics.reporters = []
broker                    | 	leader.imbalance.check.interval.seconds = 300
broker                    | 	leader.imbalance.per.broker.percentage = 10
broker                    | 	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
broker                    | 	listeners = PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
broker                    | 	log.cleaner.backoff.ms = 15000
broker                    | 	log.cleaner.dedupe.buffer.size = 134217728
broker                    | 	log.cleaner.delete.retention.ms = 86400000
broker                    | 	log.cleaner.enable = true
broker                    | 	log.cleaner.io.buffer.load.factor = 0.9
broker                    | 	log.cleaner.io.buffer.size = 524288
broker                    | 	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
broker                    | 	log.cleaner.max.compaction.lag.ms = 9223372036854775807
broker                    | 	log.cleaner.min.cleanable.ratio = 0.5
broker                    | 	log.cleaner.min.compaction.lag.ms = 0
broker                    | 	log.cleaner.threads = 1
broker                    | 	log.cleanup.policy = [delete]
broker                    | 	log.dir = /tmp/kafka-logs
broker                    | 	log.dirs = /var/lib/kafka/data
broker                    | 	log.flush.interval.messages = 9223372036854775807
broker                    | 	log.flush.interval.ms = null
broker                    | 	log.flush.offset.checkpoint.interval.ms = 60000
broker                    | 	log.flush.scheduler.interval.ms = 9223372036854775807
broker                    | 	log.flush.start.offset.checkpoint.interval.ms = 60000
broker                    | 	log.index.interval.bytes = 4096
broker                    | 	log.index.size.max.bytes = 10485760
broker                    | 	log.message.downconversion.enable = true
broker                    | 	log.message.format.version = 3.0-IV1
broker                    | 	log.message.timestamp.difference.max.ms = 9223372036854775807
broker                    | 	log.message.timestamp.type = CreateTime
broker                    | 	log.preallocate = false
broker                    | 	log.retention.bytes = -1
broker                    | 	log.retention.check.interval.ms = 300000
broker                    | 	log.retention.hours = 168
broker                    | 	log.retention.minutes = null
broker                    | 	log.retention.ms = null
broker                    | 	log.roll.hours = 168
broker                    | 	log.roll.jitter.hours = 0
broker                    | 	log.roll.jitter.ms = null
broker                    | 	log.roll.ms = null
broker                    | 	log.segment.bytes = 1073741824
broker                    | 	log.segment.delete.delay.ms = 60000
broker                    | 	max.connection.creation.rate = 2147483647
broker                    | 	max.connections = 2147483647
broker                    | 	max.connections.per.ip = 2147483647
broker                    | 	max.connections.per.ip.overrides = 
broker                    | 	max.incremental.fetch.session.cache.slots = 1000
broker                    | 	message.max.bytes = 1048588
broker                    | 	metadata.log.dir = null
broker                    | 	metadata.log.max.record.bytes.between.snapshots = 20971520
broker                    | 	metadata.log.segment.bytes = 1073741824
broker                    | 	metadata.log.segment.min.bytes = 8388608
broker                    | 	metadata.log.segment.ms = 604800000
broker                    | 	metadata.max.idle.interval.ms = 500
broker                    | 	metadata.max.retention.bytes = -1
broker                    | 	metadata.max.retention.ms = 604800000
broker                    | 	metric.reporters = []
broker                    | 	metrics.num.samples = 2
broker                    | 	metrics.recording.level = INFO
broker                    | 	metrics.sample.window.ms = 30000
broker                    | 	min.insync.replicas = 1
broker                    | 	node.id = 1
broker                    | 	num.io.threads = 8
broker                    | 	num.network.threads = 3
broker                    | 	num.partitions = 1
broker                    | 	num.recovery.threads.per.data.dir = 1
broker                    | 	num.replica.alter.log.dirs.threads = null
broker                    | 	num.replica.fetchers = 1
broker                    | 	offset.metadata.max.bytes = 4096
broker                    | 	offsets.commit.required.acks = -1
broker                    | 	offsets.commit.timeout.ms = 5000
broker                    | 	offsets.load.buffer.size = 5242880
broker                    | 	offsets.retention.check.interval.ms = 600000
broker                    | 	offsets.retention.minutes = 10080
broker                    | 	offsets.topic.compression.codec = 0
broker                    | 	offsets.topic.num.partitions = 50
broker                    | 	offsets.topic.replication.factor = 1
broker                    | 	offsets.topic.segment.bytes = 104857600
broker                    | 	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
broker                    | 	password.encoder.iterations = 4096
broker                    | 	password.encoder.key.length = 128
broker                    | 	password.encoder.keyfactory.algorithm = null
broker                    | 	password.encoder.old.secret = null
broker                    | 	password.encoder.secret = null
broker                    | 	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
broker                    | 	process.roles = []
broker                    | 	producer.purgatory.purge.interval.requests = 1000
broker                    | 	queued.max.request.bytes = -1
broker                    | 	queued.max.requests = 500
broker                    | 	quota.window.num = 11
broker                    | 	quota.window.size.seconds = 1
broker                    | 	remote.log.index.file.cache.total.size.bytes = 1073741824
broker                    | 	remote.log.manager.task.interval.ms = 30000
broker                    | 	remote.log.manager.task.retry.backoff.max.ms = 30000
broker                    | 	remote.log.manager.task.retry.backoff.ms = 500
broker                    | 	remote.log.manager.task.retry.jitter = 0.2
broker                    | 	remote.log.manager.thread.pool.size = 10
broker                    | 	remote.log.metadata.manager.class.name = null
broker                    | 	remote.log.metadata.manager.class.path = null
broker                    | 	remote.log.metadata.manager.impl.prefix = null
broker                    | 	remote.log.metadata.manager.listener.name = null
broker                    | 	remote.log.reader.max.pending.tasks = 100
broker                    | 	remote.log.reader.threads = 10
broker                    | 	remote.log.storage.manager.class.name = null
broker                    | 	remote.log.storage.manager.class.path = null
broker                    | 	remote.log.storage.manager.impl.prefix = null
broker                    | 	remote.log.storage.system.enable = false
broker                    | 	replica.fetch.backoff.ms = 1000
broker                    | 	replica.fetch.max.bytes = 1048576
broker                    | 	replica.fetch.min.bytes = 1
broker                    | 	replica.fetch.response.max.bytes = 10485760
broker                    | 	replica.fetch.wait.max.ms = 500
broker                    | 	replica.high.watermark.checkpoint.interval.ms = 5000
broker                    | 	replica.lag.time.max.ms = 30000
broker                    | 	replica.selector.class = null
broker                    | 	replica.socket.receive.buffer.bytes = 65536
broker                    | 	replica.socket.timeout.ms = 30000
broker                    | 	replication.quota.window.num = 11
broker                    | 	replication.quota.window.size.seconds = 1
broker                    | 	request.timeout.ms = 30000
broker                    | 	reserved.broker.max.id = 1000
broker                    | 	sasl.client.callback.handler.class = null
broker                    | 	sasl.enabled.mechanisms = [GSSAPI]
broker                    | 	sasl.jaas.config = null
broker                    | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
broker                    | 	sasl.kerberos.min.time.before.relogin = 60000
broker                    | 	sasl.kerberos.principal.to.local.rules = [DEFAULT]
broker                    | 	sasl.kerberos.service.name = null
broker                    | 	sasl.kerberos.ticket.renew.jitter = 0.05
broker                    | 	sasl.kerberos.ticket.renew.window.factor = 0.8
broker                    | 	sasl.login.callback.handler.class = null
broker                    | 	sasl.login.class = null
broker                    | 	sasl.login.connect.timeout.ms = null
broker                    | 	sasl.login.read.timeout.ms = null
broker                    | 	sasl.login.refresh.buffer.seconds = 300
broker                    | 	sasl.login.refresh.min.period.seconds = 60
broker                    | 	sasl.login.refresh.window.factor = 0.8
broker                    | 	sasl.login.refresh.window.jitter = 0.05
broker                    | 	sasl.login.retry.backoff.max.ms = 10000
broker                    | 	sasl.login.retry.backoff.ms = 100
broker                    | 	sasl.mechanism.controller.protocol = GSSAPI
broker                    | 	sasl.mechanism.inter.broker.protocol = GSSAPI
broker                    | 	sasl.oauthbearer.clock.skew.seconds = 30
broker                    | 	sasl.oauthbearer.expected.audience = null
broker                    | 	sasl.oauthbearer.expected.issuer = null
broker                    | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
broker                    | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
broker                    | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
broker                    | 	sasl.oauthbearer.jwks.endpoint.url = null
broker                    | 	sasl.oauthbearer.scope.claim.name = scope
broker                    | 	sasl.oauthbearer.sub.claim.name = sub
broker                    | 	sasl.oauthbearer.token.endpoint.url = null
broker                    | 	sasl.server.callback.handler.class = null
broker                    | 	sasl.server.max.receive.size = 524288
broker                    | 	security.inter.broker.protocol = PLAINTEXT
broker                    | 	security.providers = null
broker                    | 	socket.connection.setup.timeout.max.ms = 30000
broker                    | 	socket.connection.setup.timeout.ms = 10000
broker                    | 	socket.listen.backlog.size = 50
broker                    | 	socket.receive.buffer.bytes = 102400
broker                    | 	socket.request.max.bytes = 104857600
broker                    | 	socket.send.buffer.bytes = 102400
broker                    | 	ssl.cipher.suites = []
broker                    | 	ssl.client.auth = none
broker                    | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
broker                    | 	ssl.endpoint.identification.algorithm = https
broker                    | 	ssl.engine.factory.class = null
broker                    | 	ssl.key.password = null
broker                    | 	ssl.keymanager.algorithm = SunX509
broker                    | 	ssl.keystore.certificate.chain = null
broker                    | 	ssl.keystore.key = null
broker                    | 	ssl.keystore.location = null
broker                    | 	ssl.keystore.password = null
broker                    | 	ssl.keystore.type = JKS
broker                    | 	ssl.principal.mapping.rules = DEFAULT
broker                    | 	ssl.protocol = TLSv1.3
broker                    | 	ssl.provider = null
broker                    | 	ssl.secure.random.implementation = null
broker                    | 	ssl.trustmanager.algorithm = PKIX
broker                    | 	ssl.truststore.certificates = null
broker                    | 	ssl.truststore.location = null
broker                    | 	ssl.truststore.password = null
broker                    | 	ssl.truststore.type = JKS
broker                    | 	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
broker                    | 	transaction.max.timeout.ms = 900000
broker                    | 	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
broker                    | 	transaction.state.log.load.buffer.size = 5242880
broker                    | 	transaction.state.log.min.isr = 1
broker                    | 	transaction.state.log.num.partitions = 50
broker                    | 	transaction.state.log.replication.factor = 1
broker                    | 	transaction.state.log.segment.bytes = 104857600
broker                    | 	transactional.id.expiration.ms = 604800000
broker                    | 	unclean.leader.election.enable = false
broker                    | 	zookeeper.clientCnxnSocket = null
broker                    | 	zookeeper.connect = zookeeper:2181
broker                    | 	zookeeper.connection.timeout.ms = null
broker                    | 	zookeeper.max.in.flight.requests = 10
broker                    | 	zookeeper.session.timeout.ms = 18000
broker                    | 	zookeeper.set.acl = false
broker                    | 	zookeeper.ssl.cipher.suites = null
broker                    | 	zookeeper.ssl.client.enable = false
broker                    | 	zookeeper.ssl.crl.enable = false
broker                    | 	zookeeper.ssl.enabled.protocols = null
broker                    | 	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
broker                    | 	zookeeper.ssl.keystore.location = null
broker                    | 	zookeeper.ssl.keystore.password = null
broker                    | 	zookeeper.ssl.keystore.type = null
broker                    | 	zookeeper.ssl.ocsp.enable = false
broker                    | 	zookeeper.ssl.protocol = TLSv1.2
broker                    | 	zookeeper.ssl.truststore.location = null
broker                    | 	zookeeper.ssl.truststore.password = null
broker                    | 	zookeeper.ssl.truststore.type = null
broker                    |  (kafka.server.KafkaConfig)
api-gateway               | 2023-03-08 08:31:28.587  INFO 1 --- [           main] ctiveUserDetailsServiceAutoConfiguration : 
api-gateway               | 
api-gateway               | Using generated security password: c3f52790-d477-475d-a1a4-04d9f9efe1d9
api-gateway               | 
broker                    | [2023-03-08 08:31:28,630] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:31:28,630] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:31:28,630] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:31:28,631] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:31:28,788] INFO Loading logs from log dirs ArraySeq(/var/lib/kafka/data) (kafka.log.LogManager)
broker                    | [2023-03-08 08:31:28,800] INFO Attempting recovery for all logs in /var/lib/kafka/data since no clean shutdown file was found (kafka.log.LogManager)
broker                    | [2023-03-08 08:31:28,865] INFO Loaded 0 logs in 77ms. (kafka.log.LogManager)
broker                    | [2023-03-08 08:31:28,872] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
broker                    | [2023-03-08 08:31:28,891] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
broker                    | [2023-03-08 08:31:28,948] INFO Starting the log cleaner (kafka.log.LogCleaner)
broker                    | [2023-03-08 08:31:29,250] INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner)
broker                    | [2023-03-08 08:31:29,337] INFO [feature-zk-node-event-process-thread]: Starting (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
profile-service           | 2023-03-08 08:31:29.407  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
broker                    | [2023-03-08 08:31:29,418] INFO Feature ZK node at path: /feature does not exist (kafka.server.FinalizedFeatureChangeListener)
profile-service           | 2023-03-08 08:31:29.479  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
profile-service           | 2023-03-08 08:31:29.504  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.70]
user-service              | 2023-03-08 08:31:29.623  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
user-service              | 2023-03-08 08:31:29.652  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
user-service              | 2023-03-08 08:31:29.652  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.70]
broker                    | [2023-03-08 08:31:29,665] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
profile-service           | 2023-03-08 08:31:29.854  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
profile-service           | 2023-03-08 08:31:29.854  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 9481 ms
netflix-service           | 2023-03-08 08:31:29.934  INFO 1 --- [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
prime-service             | 2023-03-08 08:31:29.953  INFO 1 --- [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
user-service              | 2023-03-08 08:31:30.024  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
user-service              | 2023-03-08 08:31:30.034  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 9475 ms
service-discovery-server  | 2023-03-08 08:31:30.076  INFO 1 --- [           main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
service-discovery-server  | 2023-03-08 08:31:30.076  INFO 1 --- [           main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
netflix-service           | 2023-03-08 08:31:30.764  WARN 1 --- [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
prime-service             | 2023-03-08 08:31:30.904  WARN 1 --- [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
netflix-service           | 2023-03-08 08:31:31.042  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 46321 (http) with context path ''
prime-service             | 2023-03-08 08:31:31.078  INFO 1 --- [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
netflix-service           | 2023-03-08 08:31:31.103  INFO 1 --- [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 46321
netflix-service           | 2023-03-08 08:31:31.136  INFO 1 --- [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
profile-service           | 2023-03-08 08:31:31.197  INFO 1 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
google-service            | 2023-03-08 08:31:31.298  INFO 1 --- [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
user-service              | 2023-03-08 08:31:31.296  INFO 1 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
api-gateway               | 2023-03-08 08:31:31.405 DEBUG 1 --- [           main] o.s.c.gateway.config.GatewayProperties   : Routes supplied from Gateway Properties: [RouteDefinition{id='user-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/user/**}}], filters=[], uri=lb://user-service, order=0, metadata={}}, RouteDefinition{id='profile-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/profile/**}}], filters=[], uri=lb://profile-service, order=0, metadata={}}, RouteDefinition{id='service-discovery-server', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/eureka/web}}], filters=[FilterDefinition{name='SetPath', args={_genkey_0=/}}], uri=http://localhost:8761, order=0, metadata={}}, RouteDefinition{id='service-discovery-server-static', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/eureka/**}}], filters=[], uri=http://localhost:8761, order=0, metadata={}}, RouteDefinition{id='netlfix-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/netlfix/**}}], filters=[], uri=lb://netflix-service, order=0, metadata={}}, RouteDefinition{id='prime-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/prime/**}}], filters=[], uri=lb://prime-service, order=0, metadata={}}, RouteDefinition{id='user-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/subscription/**}}], filters=[], uri=lb://user-service, order=0, metadata={}}, RouteDefinition{id='google-service', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/api/googleAuth/**}}], filters=[], uri=lb://google-service, order=0, metadata={}}]
broker                    | [2023-03-08 08:31:31,416] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
broker                    | [2023-03-08 08:31:31,422] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.DataPlaneAcceptor)
broker                    | [2023-03-08 08:31:31,492] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
broker                    | [2023-03-08 08:31:31,495] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
broker                    | [2023-03-08 08:31:31,497] INFO Awaiting socket connections on 0.0.0.0:29092. (kafka.network.DataPlaneAcceptor)
profile-service           | 2023-03-08 08:31:31.536  INFO 1 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.14.Final
broker                    | [2023-03-08 08:31:31,547] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT_INTERNAL) (kafka.network.SocketServer)
broker                    | [2023-03-08 08:31:31,569] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Starting (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:31:31,679] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:31:31,698] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
prime-service             | 2023-03-08 08:31:31.705  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
netflix-service           | 2023-03-08 08:31:31.708  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
broker                    | [2023-03-08 08:31:31,731] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:31:31,731] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
prime-service             | 2023-03-08 08:31:31.747  INFO 1 --- [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
netflix-service           | 2023-03-08 08:31:31.751  INFO 1 --- [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
user-service              | 2023-03-08 08:31:31.754  INFO 1 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.14.Final
netflix-service           | 2023-03-08 08:31:31.819  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
netflix-service           | 2023-03-08 08:31:31.820  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
prime-service             | 2023-03-08 08:31:31.821  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
prime-service             | 2023-03-08 08:31:31.822  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
prime-service             | 2023-03-08 08:31:31.824  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
prime-service             | 2023-03-08 08:31:31.824  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
prime-service             | 2023-03-08 08:31:31.824  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
prime-service             | 2023-03-08 08:31:31.825  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
prime-service             | 2023-03-08 08:31:31.825  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
netflix-service           | 2023-03-08 08:31:31.825  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
netflix-service           | 2023-03-08 08:31:31.826  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
netflix-service           | 2023-03-08 08:31:31.826  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
netflix-service           | 2023-03-08 08:31:31.826  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
netflix-service           | 2023-03-08 08:31:31.826  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
broker                    | [2023-03-08 08:31:31,862] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
broker                    | [2023-03-08 08:31:31,987] INFO Creating /brokers/ids/1 (is it secure? false) (kafka.zk.KafkaZkClient)
broker                    | [2023-03-08 08:31:32,050] INFO Stat of the created znode at /brokers/ids/1 is: 27,27,1678264292025,1678264292025,1,0,0,72058007057793025,271,0,27
broker                    |  (kafka.zk.KafkaZkClient)
broker                    | [2023-03-08 08:31:32,051] INFO Registered broker 1 at path /brokers/ids/1 with addresses: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092, czxid (broker epoch): 27 (kafka.zk.KafkaZkClient)
api-gateway               | 2023-03-08 08:31:32.150  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [After]
api-gateway               | 2023-03-08 08:31:32.150  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Before]
api-gateway               | 2023-03-08 08:31:32.157  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Between]
api-gateway               | 2023-03-08 08:31:32.157  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Cookie]
api-gateway               | 2023-03-08 08:31:32.158  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Header]
api-gateway               | 2023-03-08 08:31:32.158  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Host]
api-gateway               | 2023-03-08 08:31:32.159  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Method]
api-gateway               | 2023-03-08 08:31:32.160  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Path]
api-gateway               | 2023-03-08 08:31:32.166  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Query]
api-gateway               | 2023-03-08 08:31:32.166  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [ReadBody]
api-gateway               | 2023-03-08 08:31:32.166  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [RemoteAddr]
api-gateway               | 2023-03-08 08:31:32.166  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [XForwardedRemoteAddr]
api-gateway               | 2023-03-08 08:31:32.166  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Weight]
api-gateway               | 2023-03-08 08:31:32.169  INFO 1 --- [           main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [CloudFoundryRouteService]
google-service            | 2023-03-08 08:31:32.289  WARN 1 --- [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
broker                    | [2023-03-08 08:31:32,301] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
broker                    | [2023-03-08 08:31:32,349] INFO [ExpirationReaper-1-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:31:32,400] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:31:32,400] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:31:32,422] INFO Successfully created /controller_epoch with initial epoch 0 (kafka.zk.KafkaZkClient)
broker                    | [2023-03-08 08:31:32,434] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,449] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
google-service            | 2023-03-08 08:31:32.476  INFO 1 --- [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
broker                    | [2023-03-08 08:31:32,456] INFO Feature ZK node created at path: /feature (kafka.server.FinalizedFeatureChangeListener)
broker                    | [2023-03-08 08:31:32,497] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
broker                    | [2023-03-08 08:31:32,518] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
broker                    | [2023-03-08 08:31:32,622] INFO [MetadataCache brokerId=1] Updated cache from existing <empty> to latest FinalizedFeaturesAndEpoch(features=Map(), epoch=0). (kafka.server.metadata.ZkMetadataCache)
broker                    | [2023-03-08 08:31:32,622] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,661] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,663] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
broker                    | [2023-03-08 08:31:32,668] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,673] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,681] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
broker                    | [2023-03-08 08:31:32,713] INFO [Transaction Marker Channel Manager 1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
broker                    | [2023-03-08 08:31:32,760] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 27) (kafka.controller.KafkaController)
user-service              | 2023-03-08 08:31:32.776  INFO 1 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
broker                    | [2023-03-08 08:31:32,789] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,814] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
profile-service           | 2023-03-08 08:31:32.852  INFO 1 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
broker                    | [2023-03-08 08:31:32,915] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,917] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,934] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:31:32,916] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
broker                    | [2023-03-08 08:31:32,934] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,934] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,943] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,950] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,977] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:32,977] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
broker                    | [2023-03-08 08:31:32,985] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:33,049] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
broker                    | [2023-03-08 08:31:33,127] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
broker                    | [2023-03-08 08:31:33,129] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
google-service            | 2023-03-08 08:31:33.167  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
google-service            | 2023-03-08 08:31:33.180  INFO 1 --- [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
broker                    | [2023-03-08 08:31:33,208] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
broker                    | [2023-03-08 08:31:33,219] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
broker                    | [2023-03-08 08:31:33,221] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
broker                    | [2023-03-08 08:31:33,221] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
broker                    | [2023-03-08 08:31:33,216] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
broker                    | [2023-03-08 08:31:33,230] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
broker                    | [2023-03-08 08:31:33,278] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
broker                    | [2023-03-08 08:31:33,281] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
broker                    | [2023-03-08 08:31:33,293] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:33,311] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:33,314] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:33,317] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:33,318] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
google-service            | 2023-03-08 08:31:33.321  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
google-service            | 2023-03-08 08:31:33.326  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
google-service            | 2023-03-08 08:31:33.328  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
google-service            | 2023-03-08 08:31:33.333  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
broker                    | [2023-03-08 08:31:33,343] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
google-service            | 2023-03-08 08:31:33.346  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
google-service            | 2023-03-08 08:31:33.350  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
google-service            | 2023-03-08 08:31:33.350  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
pgadmin4_container        | NOTE: Configuring authentication for SERVER mode.
pgadmin4_container        | 
pgadmin4_container        | pgAdmin 4 - Application Initialisation
pgadmin4_container        | ======================================
pgadmin4_container        | 
profile-service           | 2023-03-08 08:31:33.440  INFO 1 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
user-service              | 2023-03-08 08:31:33.515  INFO 1 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
broker                    | [2023-03-08 08:31:33,631] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:33,645] INFO Kafka version: 7.3.0-ccs (org.apache.kafka.common.utils.AppInfoParser)
broker                    | [2023-03-08 08:31:33,645] INFO Kafka commitId: b8341813ae2b0444690121942f62c3a125fbf4b3 (org.apache.kafka.common.utils.AppInfoParser)
broker                    | [2023-03-08 08:31:33,645] INFO Kafka startTimeMs: 1678264293362 (org.apache.kafka.common.utils.AppInfoParser)
broker                    | [2023-03-08 08:31:33,759] INFO [KafkaServer id=1] started (kafka.server.KafkaServer)
broker                    | [2023-03-08 08:31:33,854] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Recorded new controller, from now on will use broker localhost:9092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:31:33,855] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Recorded new controller, from now on will use broker localhost:9092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:31:33,893] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
prime-service             | 2023-03-08 08:31:34.021  INFO 1 --- [           main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://service-discovery-server:8761/eureka/}, exception=I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
prime-service             | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
prime-service             | 	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
prime-service             | 	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
prime-service             | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
prime-service             | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
prime-service             | 	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
prime-service             | 	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
prime-service             | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
prime-service             | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
prime-service             | 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
prime-service             | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
prime-service             | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
prime-service             | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
prime-service             | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
prime-service             | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
prime-service             | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
prime-service             | 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
prime-service             | 	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
prime-service             | 	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
prime-service             | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
prime-service             | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
prime-service             | 	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
prime-service             | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
prime-service             | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
prime-service             | 	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
prime-service             | 	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
prime-service             | 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
prime-service             | 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
prime-service             | 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$f7815e84.getEurekaClient(<generated>)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
prime-service             | 	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
prime-service             | 	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
prime-service             | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
prime-service             | 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
prime-service             | 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
prime-service             | 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
prime-service             | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
prime-service             | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
prime-service             | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
prime-service             | 	at com.backend.primeservice.PrimeServiceApplication.main(PrimeServiceApplication.java:10)
prime-service             | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
prime-service             | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
prime-service             | 	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)
prime-service             | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)
prime-service             | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)
prime-service             | 	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)
prime-service             | Caused by: org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
prime-service             | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
prime-service             | 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
prime-service             | 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
prime-service             | 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
prime-service             | 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
prime-service             | 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
prime-service             | 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
prime-service             | 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
prime-service             | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
prime-service             | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
prime-service             | 	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
prime-service             | 	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
prime-service             | 	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
prime-service             | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
prime-service             | 	... 70 more
prime-service             | Caused by: java.net.ConnectException: Connection refused
prime-service             | 	at java.base/sun.nio.ch.Net.connect0(Native Method)
prime-service             | 	at java.base/sun.nio.ch.Net.connect(Net.java:579)
prime-service             | 	at java.base/sun.nio.ch.Net.connect(Net.java:568)
prime-service             | 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:585)
prime-service             | 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
prime-service             | 	at java.base/java.net.Socket.connect(Socket.java:633)
prime-service             | 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
prime-service             | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
prime-service             | 	... 83 more
prime-service             | 
prime-service             | 2023-03-08 08:31:34.022  WARN 1 --- [           main] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
prime-service             | 2023-03-08 08:31:34.052  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
prime-service             | 	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
prime-service             | 	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
prime-service             | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
prime-service             | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
prime-service             | 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
prime-service             | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
prime-service             | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
prime-service             | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
prime-service             | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
prime-service             | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
prime-service             | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
prime-service             | 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
prime-service             | 	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
prime-service             | 	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
prime-service             | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
prime-service             | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
prime-service             | 	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
prime-service             | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
prime-service             | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
prime-service             | 	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
prime-service             | 	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
prime-service             | 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
prime-service             | 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
prime-service             | 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$f7815e84.getEurekaClient(<generated>)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
prime-service             | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
prime-service             | 	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
prime-service             | 	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
prime-service             | 	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
prime-service             | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
prime-service             | 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
prime-service             | 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
prime-service             | 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
prime-service             | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
prime-service             | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
prime-service             | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
prime-service             | 	at com.backend.primeservice.PrimeServiceApplication.main(PrimeServiceApplication.java:10)
prime-service             | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
prime-service             | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
prime-service             | 	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)
prime-service             | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)
prime-service             | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)
prime-service             | 	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)
prime-service             | 
prime-service             | 2023-03-08 08:31:34.052  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from primary servers failed
prime-service             | 2023-03-08 08:31:34.052  WARN 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Using default backup registry implementation which does not do anything.
prime-service             | 2023-03-08 08:31:34.053  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from backup servers failed
prime-service             | 2023-03-08 08:31:34.078  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
netflix-service           | 2023-03-08 08:31:34.084  INFO 1 --- [           main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://service-discovery-server:8761/eureka/}, exception=I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
netflix-service           | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
netflix-service           | 	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
netflix-service           | 	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
netflix-service           | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
netflix-service           | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
netflix-service           | 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
netflix-service           | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
netflix-service           | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
netflix-service           | 	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
netflix-service           | 	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
netflix-service           | 	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
netflix-service           | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
netflix-service           | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
netflix-service           | 	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
netflix-service           | 	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
netflix-service           | 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
netflix-service           | 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
netflix-service           | 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$8d162c78.getEurekaClient(<generated>)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:146)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:131)
netflix-service           | 	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
netflix-service           | 	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
netflix-service           | 	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
netflix-service           | 	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
netflix-service           | 	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
netflix-service           | 	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:46)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
netflix-service           | 	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
netflix-service           | 	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
netflix-service           | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
netflix-service           | 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
netflix-service           | 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
netflix-service           | 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
netflix-service           | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
netflix-service           | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
netflix-service           | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
netflix-service           | 	at com.backend.netflixservice.NetflixServiceApplication.main(NetflixServiceApplication.java:12)
netflix-service           | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
netflix-service           | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
netflix-service           | 	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)
netflix-service           | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)
netflix-service           | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)
netflix-service           | 	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)
netflix-service           | Caused by: org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
netflix-service           | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
netflix-service           | 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
netflix-service           | 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
netflix-service           | 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
netflix-service           | 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
netflix-service           | 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
netflix-service           | 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
netflix-service           | 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
netflix-service           | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
netflix-service           | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
netflix-service           | 	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
netflix-service           | 	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
netflix-service           | 	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
netflix-service           | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
netflix-service           | 	... 78 more
netflix-service           | Caused by: java.net.ConnectException: Connection refused
netflix-service           | 	at java.base/sun.nio.ch.Net.connect0(Native Method)
netflix-service           | 	at java.base/sun.nio.ch.Net.connect(Net.java:579)
netflix-service           | 	at java.base/sun.nio.ch.Net.connect(Net.java:568)
netflix-service           | 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:585)
netflix-service           | 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
netflix-service           | 	at java.base/java.net.Socket.connect(Socket.java:633)
netflix-service           | 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
netflix-service           | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
netflix-service           | 	... 91 more
netflix-service           | 
netflix-service           | 2023-03-08 08:31:34.086  WARN 1 --- [           main] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
netflix-service           | 2023-03-08 08:31:34.087  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
netflix-service           | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
netflix-service           | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
netflix-service           | 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
netflix-service           | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
netflix-service           | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
netflix-service           | 	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
netflix-service           | 	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
netflix-service           | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
netflix-service           | 	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
netflix-service           | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
netflix-service           | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
netflix-service           | 	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
netflix-service           | 	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
netflix-service           | 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
netflix-service           | 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
netflix-service           | 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$8d162c78.getEurekaClient(<generated>)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:146)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:131)
netflix-service           | 	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
netflix-service           | 	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
netflix-service           | 	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
netflix-service           | 	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
netflix-service           | 	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
netflix-service           | 	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:46)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
netflix-service           | 	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
netflix-service           | 	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
netflix-service           | 	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
netflix-service           | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
netflix-service           | 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
netflix-service           | 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
netflix-service           | 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
netflix-service           | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
netflix-service           | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
netflix-service           | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
netflix-service           | 	at com.backend.netflixservice.NetflixServiceApplication.main(NetflixServiceApplication.java:12)
netflix-service           | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
netflix-service           | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
netflix-service           | 	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)
netflix-service           | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)
netflix-service           | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)
netflix-service           | 	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)
netflix-service           | 
netflix-service           | 2023-03-08 08:31:34.087  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from primary servers failed
netflix-service           | 2023-03-08 08:31:34.087  WARN 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Using default backup registry implementation which does not do anything.
netflix-service           | 2023-03-08 08:31:34.090  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from backup servers failed
netflix-service           | 2023-03-08 08:31:34.102  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
prime-service             | 2023-03-08 08:31:34.115  INFO 1 --- [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
netflix-service           | 2023-03-08 08:31:34.124  INFO 1 --- [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
netflix-service           | 2023-03-08 08:31:34.156  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1678264294150 with initial instances count: 0
prime-service             | 2023-03-08 08:31:34.156  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1678264294154 with initial instances count: 0
prime-service             | 2023-03-08 08:31:34.161  INFO 1 --- [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application PRIME-SERVICE with eureka with status UP
netflix-service           | 2023-03-08 08:31:34.163  INFO 1 --- [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application NETFLIX-SERVICE with eureka with status UP
netflix-service           | 2023-03-08 08:31:34.165  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264294165, current=UP, previous=STARTING]
prime-service             | 2023-03-08 08:31:34.166  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264294166, current=UP, previous=STARTING]
prime-service             | 2023-03-08 08:31:34.171  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service: registering service...
netflix-service           | 2023-03-08 08:31:34.183  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0: registering service...
netflix-service           | 2023-03-08 08:31:34.240  INFO 1 --- [           main] c.b.n.NetflixServiceApplication          : Started NetflixServiceApplication in 16.966 seconds (JVM running for 19.599)
netflix-service           | 2023-03-08 08:31:34.304  INFO 1 --- [nfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://service-discovery-server:8761/eureka/}, exception=I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/NETFLIX-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/NETFLIX-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
netflix-service           | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
netflix-service           | 	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
netflix-service           | 	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
netflix-service           | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
netflix-service           | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
netflix-service           | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
netflix-service           | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
netflix-service           | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
netflix-service           | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
netflix-service           | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
netflix-service           | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
netflix-service           | 	at java.base/java.lang.Thread.run(Thread.java:833)
netflix-service           | Caused by: org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
netflix-service           | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
netflix-service           | 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
netflix-service           | 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
netflix-service           | 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
netflix-service           | 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
netflix-service           | 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
netflix-service           | 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
netflix-service           | 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
netflix-service           | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
netflix-service           | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
netflix-service           | 	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
netflix-service           | 	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
netflix-service           | 	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
netflix-service           | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
netflix-service           | 	... 22 more
netflix-service           | Caused by: java.net.ConnectException: Connection refused
netflix-service           | 	at java.base/sun.nio.ch.Net.connect0(Native Method)
netflix-service           | 	at java.base/sun.nio.ch.Net.connect(Net.java:579)
netflix-service           | 	at java.base/sun.nio.ch.Net.connect(Net.java:568)
netflix-service           | 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:585)
netflix-service           | 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
netflix-service           | 	at java.base/java.net.Socket.connect(Socket.java:633)
netflix-service           | 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
netflix-service           | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
netflix-service           | 	... 35 more
netflix-service           | 
netflix-service           | 2023-03-08 08:31:34.304  WARN 1 --- [nfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/NETFLIX-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
prime-service             | 2023-03-08 08:31:34.308  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
prime-service             | 2023-03-08 08:31:34.311  INFO 1 --- [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
netflix-service           | 2023-03-08 08:31:34.309  WARN 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0 - registration failed Cannot execute request on any known server
netflix-service           | 
netflix-service           | com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
netflix-service           | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
netflix-service           | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
netflix-service           | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
netflix-service           | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
netflix-service           | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
netflix-service           | 
netflix-service           | 2023-03-08 08:31:34.311  WARN 1 --- [nfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator
netflix-service           | 
netflix-service           | com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.10.17.jar!/:1.10.17]
netflix-service           | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
netflix-service           | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
netflix-service           | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
netflix-service           | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
netflix-service           | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
netflix-service           | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
netflix-service           | 
prime-service             | 2023-03-08 08:31:34.363  INFO 1 --- [           main] c.b.p.PrimeServiceApplication            : Started PrimeServiceApplication in 17.528 seconds (JVM running for 19.899)
prime-service             | 2023-03-08 08:31:34.404  INFO 1 --- [nfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://service-discovery-server:8761/eureka/}, exception=I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/PRIME-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/PRIME-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
prime-service             | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
prime-service             | 	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
prime-service             | 	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
prime-service             | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
prime-service             | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
prime-service             | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
prime-service             | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
prime-service             | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
prime-service             | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
prime-service             | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
prime-service             | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
prime-service             | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
prime-service             | 	at java.base/java.lang.Thread.run(Thread.java:833)
prime-service             | Caused by: org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
prime-service             | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
prime-service             | 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
prime-service             | 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
prime-service             | 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
prime-service             | 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
prime-service             | 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
prime-service             | 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
prime-service             | 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
prime-service             | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
prime-service             | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
prime-service             | 	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
prime-service             | 	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
prime-service             | 	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
prime-service             | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
prime-service             | 	... 22 more
prime-service             | Caused by: java.net.ConnectException: Connection refused
prime-service             | 	at java.base/sun.nio.ch.Net.connect0(Native Method)
prime-service             | 	at java.base/sun.nio.ch.Net.connect(Net.java:579)
prime-service             | 	at java.base/sun.nio.ch.Net.connect(Net.java:568)
prime-service             | 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:585)
prime-service             | 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
prime-service             | 	at java.base/java.net.Socket.connect(Socket.java:633)
prime-service             | 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
prime-service             | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
prime-service             | 	... 35 more
prime-service             | 
prime-service             | 2023-03-08 08:31:34.415  WARN 1 --- [nfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/PRIME-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
prime-service             | 2023-03-08 08:31:34.422  WARN 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service - registration failed Cannot execute request on any known server
prime-service             | 
prime-service             | com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
prime-service             | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
prime-service             | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
prime-service             | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
prime-service             | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
prime-service             | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
prime-service             | 
prime-service             | 2023-03-08 08:31:34.422  WARN 1 --- [nfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator
prime-service             | 
prime-service             | com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.10.17.jar!/:1.10.17]
prime-service             | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
prime-service             | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
prime-service             | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
prime-service             | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
prime-service             | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
prime-service             | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
prime-service             | 
user-service              | 2023-03-08 08:31:34.495  INFO 1 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
user-service              | 2023-03-08 08:31:34.559  INFO 1 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
api-gateway               | 2023-03-08 08:31:34.593  INFO 1 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
profile-service           | 2023-03-08 08:31:34.775  INFO 1 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
profile-service           | 2023-03-08 08:31:34.838  INFO 1 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
google-service            | 2023-03-08 08:31:34.932  INFO 1 --- [           main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://service-discovery-server:8761/eureka/}, exception=I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
google-service            | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
google-service            | 	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
google-service            | 	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
google-service            | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
google-service            | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
google-service            | 	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
google-service            | 	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
google-service            | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
google-service            | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
google-service            | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
google-service            | 	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
google-service            | 	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
google-service            | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
google-service            | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
google-service            | 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
google-service            | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
google-service            | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
google-service            | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
google-service            | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
google-service            | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
google-service            | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
google-service            | 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
google-service            | 	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
google-service            | 	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
google-service            | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
google-service            | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
google-service            | 	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
google-service            | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
google-service            | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
google-service            | 	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
google-service            | 	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
google-service            | 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
google-service            | 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
google-service            | 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$f28a5d19.getEurekaClient(<generated>)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
google-service            | 	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
google-service            | 	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
google-service            | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
google-service            | 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
google-service            | 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
google-service            | 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
google-service            | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
google-service            | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
google-service            | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
google-service            | 	at com.backend.googleservice.GoogleServiceApplication.main(GoogleServiceApplication.java:11)
google-service            | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
google-service            | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
google-service            | 	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)
google-service            | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)
google-service            | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)
google-service            | 	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)
google-service            | Caused by: org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
google-service            | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
google-service            | 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
google-service            | 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
google-service            | 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
google-service            | 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
google-service            | 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
google-service            | 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
google-service            | 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
google-service            | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
google-service            | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
google-service            | 	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
google-service            | 	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
google-service            | 	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
google-service            | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
google-service            | 	... 70 more
google-service            | Caused by: java.net.ConnectException: Connection refused
google-service            | 	at java.base/sun.nio.ch.Net.connect0(Native Method)
google-service            | 	at java.base/sun.nio.ch.Net.connect(Net.java:579)
google-service            | 	at java.base/sun.nio.ch.Net.connect(Net.java:568)
google-service            | 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:585)
google-service            | 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
google-service            | 	at java.base/java.net.Socket.connect(Socket.java:633)
google-service            | 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
google-service            | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
google-service            | 	... 83 more
google-service            | 
google-service            | 2023-03-08 08:31:34.933  WARN 1 --- [           main] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
google-service            | 2023-03-08 08:31:34.934  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
google-service            | 	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
google-service            | 	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
google-service            | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
google-service            | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
google-service            | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
google-service            | 	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
google-service            | 	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
google-service            | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
google-service            | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
google-service            | 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
google-service            | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
google-service            | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
google-service            | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
google-service            | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
google-service            | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
google-service            | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
google-service            | 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
google-service            | 	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
google-service            | 	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
google-service            | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
google-service            | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
google-service            | 	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
google-service            | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
google-service            | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
google-service            | 	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
google-service            | 	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
google-service            | 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
google-service            | 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
google-service            | 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$f28a5d19.getEurekaClient(<generated>)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
google-service            | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
google-service            | 	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
google-service            | 	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
google-service            | 	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
google-service            | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
google-service            | 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
google-service            | 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
google-service            | 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
google-service            | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
google-service            | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
google-service            | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
google-service            | 	at com.backend.googleservice.GoogleServiceApplication.main(GoogleServiceApplication.java:11)
google-service            | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
google-service            | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
google-service            | 	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)
google-service            | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)
google-service            | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)
google-service            | 	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)
google-service            | 
google-service            | 2023-03-08 08:31:34.935  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from primary servers failed
google-service            | 2023-03-08 08:31:34.936  WARN 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Using default backup registry implementation which does not do anything.
google-service            | 2023-03-08 08:31:34.937  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from backup servers failed
google-service            | 2023-03-08 08:31:34.950  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
google-service            | 2023-03-08 08:31:34.960  INFO 1 --- [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
google-service            | 2023-03-08 08:31:34.982  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1678264294980 with initial instances count: 0
google-service            | 2023-03-08 08:31:34.988  INFO 1 --- [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application GOOGLE-SERVICE with eureka with status UP
google-service            | 2023-03-08 08:31:34.990  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264294989, current=UP, previous=STARTING]
google-service            | 2023-03-08 08:31:35.008  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191: registering service...
google-service            | 2023-03-08 08:31:35.116  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9191 (http) with context path ''
google-service            | 2023-03-08 08:31:35.120  INFO 1 --- [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9191
google-service            | 2023-03-08 08:31:35.204  INFO 1 --- [           main] c.b.g.GoogleServiceApplication           : Started GoogleServiceApplication in 19.001 seconds (JVM running for 21.076)
google-service            | 2023-03-08 08:31:35.269  INFO 1 --- [nfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://service-discovery-server:8761/eureka/}, exception=I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/GOOGLE-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/GOOGLE-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
google-service            | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
google-service            | 	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
google-service            | 	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
google-service            | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
google-service            | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
google-service            | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
google-service            | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
google-service            | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
google-service            | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
google-service            | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
google-service            | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
google-service            | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
google-service            | 	at java.base/java.lang.Thread.run(Thread.java:833)
google-service            | Caused by: org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
google-service            | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
google-service            | 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
google-service            | 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
google-service            | 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
google-service            | 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
google-service            | 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
google-service            | 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
google-service            | 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
google-service            | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
google-service            | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
google-service            | 	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
google-service            | 	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
google-service            | 	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
google-service            | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
google-service            | 	... 22 more
google-service            | Caused by: java.net.ConnectException: Connection refused
google-service            | 	at java.base/sun.nio.ch.Net.connect0(Native Method)
google-service            | 	at java.base/sun.nio.ch.Net.connect(Net.java:579)
google-service            | 	at java.base/sun.nio.ch.Net.connect(Net.java:568)
google-service            | 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:585)
google-service            | 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
google-service            | 	at java.base/java.net.Socket.connect(Socket.java:633)
google-service            | 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
google-service            | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
google-service            | 	... 35 more
google-service            | 
google-service            | 2023-03-08 08:31:35.270  WARN 1 --- [nfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/GOOGLE-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
google-service            | 2023-03-08 08:31:35.313  WARN 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191 - registration failed Cannot execute request on any known server
google-service            | 
google-service            | com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
google-service            | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
google-service            | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
google-service            | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
google-service            | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
google-service            | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
google-service            | 
google-service            | 2023-03-08 08:31:35.314  WARN 1 --- [nfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator
google-service            | 
google-service            | com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
google-service            | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.10.17.jar!/:1.10.17]
google-service            | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
google-service            | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
google-service            | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
google-service            | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
google-service            | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
google-service            | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
google-service            | 
api-gateway               | 2023-03-08 08:31:35.534  INFO 1 --- [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
api-gateway               | 2023-03-08 08:31:35.786  WARN 1 --- [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
api-gateway               | 2023-03-08 08:31:35.892  INFO 1 --- [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
api-gateway               | 2023-03-08 08:31:36.136  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
api-gateway               | 2023-03-08 08:31:36.166  INFO 1 --- [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
api-gateway               | 2023-03-08 08:31:36.241  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
api-gateway               | 2023-03-08 08:31:36.241  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
api-gateway               | 2023-03-08 08:31:36.242  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
api-gateway               | 2023-03-08 08:31:36.242  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
api-gateway               | 2023-03-08 08:31:36.242  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
api-gateway               | 2023-03-08 08:31:36.242  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
api-gateway               | 2023-03-08 08:31:36.242  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
service-discovery-server  | 2023-03-08 08:31:36.653  INFO 1 --- [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses Jersey
service-discovery-server  | 2023-03-08 08:31:36.928  WARN 1 --- [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
user-service              | 2023-03-08 08:31:37.033  INFO 1 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
user-service              | 2023-03-08 08:31:37.045  INFO 1 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
service-discovery-server  | 2023-03-08 08:31:37.061  INFO 1 --- [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
service-discovery-server  | 2023-03-08 08:31:37.229  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
service-discovery-server  | 2023-03-08 08:31:37.229  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Client configured to neither register nor query for data.
service-discovery-server  | 2023-03-08 08:31:37.266  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1678264297257 with initial instances count: 0
profile-service           | 2023-03-08 08:31:37.345  INFO 1 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
profile-service           | 2023-03-08 08:31:37.358  INFO 1 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
api-gateway               | 2023-03-08 08:31:37.470  INFO 1 --- [           main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://service-discovery-server:8761/eureka/}, exception=I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
api-gateway               | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
api-gateway               | 	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
api-gateway               | 	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
api-gateway               | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
api-gateway               | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
api-gateway               | 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
api-gateway               | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
api-gateway               | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
api-gateway               | 	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
api-gateway               | 	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
api-gateway               | 	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
api-gateway               | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
api-gateway               | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
api-gateway               | 	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
api-gateway               | 	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
api-gateway               | 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
api-gateway               | 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
api-gateway               | 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$fc818623.getEurekaClient(<generated>)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
api-gateway               | 	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
api-gateway               | 	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
api-gateway               | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
api-gateway               | 	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
api-gateway               | 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
api-gateway               | 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
api-gateway               | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
api-gateway               | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
api-gateway               | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
api-gateway               | 	at com.backend.apigateway.ApiGatewayApplication.main(ApiGatewayApplication.java:12)
api-gateway               | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
api-gateway               | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
api-gateway               | 	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)
api-gateway               | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)
api-gateway               | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)
api-gateway               | 	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)
api-gateway               | Caused by: org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
api-gateway               | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
api-gateway               | 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
api-gateway               | 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
api-gateway               | 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
api-gateway               | 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
api-gateway               | 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
api-gateway               | 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
api-gateway               | 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
api-gateway               | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
api-gateway               | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
api-gateway               | 	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
api-gateway               | 	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
api-gateway               | 	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
api-gateway               | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
api-gateway               | 	... 70 more
api-gateway               | Caused by: java.net.ConnectException: Connection refused
api-gateway               | 	at java.base/sun.nio.ch.Net.connect0(Native Method)
api-gateway               | 	at java.base/sun.nio.ch.Net.connect(Net.java:579)
api-gateway               | 	at java.base/sun.nio.ch.Net.connect(Net.java:568)
api-gateway               | 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:585)
api-gateway               | 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
api-gateway               | 	at java.base/java.net.Socket.connect(Socket.java:633)
api-gateway               | 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
api-gateway               | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
api-gateway               | 	... 83 more
api-gateway               | 
api-gateway               | 2023-03-08 08:31:37.472  WARN 1 --- [           main] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on GET request for "http://service-discovery-server:8761/eureka/apps/": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
api-gateway               | 2023-03-08 08:31:37.473  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
api-gateway               | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
api-gateway               | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
api-gateway               | 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
api-gateway               | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
api-gateway               | 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
api-gateway               | 	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
api-gateway               | 	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
api-gateway               | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
api-gateway               | 	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
api-gateway               | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
api-gateway               | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
api-gateway               | 	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
api-gateway               | 	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
api-gateway               | 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
api-gateway               | 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
api-gateway               | 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$fc818623.getEurekaClient(<generated>)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
api-gateway               | 	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
api-gateway               | 	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
api-gateway               | 	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
api-gateway               | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
api-gateway               | 	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
api-gateway               | 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
api-gateway               | 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
api-gateway               | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
api-gateway               | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
api-gateway               | 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
api-gateway               | 	at com.backend.apigateway.ApiGatewayApplication.main(ApiGatewayApplication.java:12)
api-gateway               | 	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
api-gateway               | 	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
api-gateway               | 	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)
api-gateway               | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)
api-gateway               | 	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)
api-gateway               | 	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)
api-gateway               | 
api-gateway               | 2023-03-08 08:31:37.474  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from primary servers failed
api-gateway               | 2023-03-08 08:31:37.474  WARN 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Using default backup registry implementation which does not do anything.
api-gateway               | 2023-03-08 08:31:37.475  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initial registry fetch from backup servers failed
service-discovery-server  | 2023-03-08 08:31:37.487  INFO 1 --- [           main] c.n.eureka.DefaultEurekaServerContext    : Initializing ...
api-gateway               | 2023-03-08 08:31:37.486  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
service-discovery-server  | 2023-03-08 08:31:37.491  WARN 1 --- [           main] c.n.eureka.cluster.PeerEurekaNodes       : The replica size seems to be empty. Check the route 53 DNS Registry
api-gateway               | 2023-03-08 08:31:37.504  INFO 1 --- [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
api-gateway               | 2023-03-08 08:31:37.517  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1678264297515 with initial instances count: 0
api-gateway               | 2023-03-08 08:31:37.519  INFO 1 --- [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application API-GATEWAY-SERVICE with eureka with status UP
api-gateway               | 2023-03-08 08:31:37.522  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264297522, current=UP, previous=STARTING]
api-gateway               | 2023-03-08 08:31:37.525  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080: registering service...
service-discovery-server  | 2023-03-08 08:31:37.638  INFO 1 --- [           main] c.n.e.registry.AbstractInstanceRegistry  : Finished initializing remote region registries. All known remote regions: []
service-discovery-server  | 2023-03-08 08:31:37.644  INFO 1 --- [           main] c.n.eureka.DefaultEurekaServerContext    : Initialized
api-gateway               | 2023-03-08 08:31:37.655  INFO 1 --- [nfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://service-discovery-server:8761/eureka/}, exception=I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/API-GATEWAY-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/API-GATEWAY-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
api-gateway               | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:791)
api-gateway               | 	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:717)
api-gateway               | 	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:608)
api-gateway               | 	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
api-gateway               | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
api-gateway               | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
api-gateway               | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
api-gateway               | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
api-gateway               | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
api-gateway               | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
api-gateway               | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
api-gateway               | 	at java.base/java.lang.Thread.run(Thread.java:833)
api-gateway               | Caused by: org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
api-gateway               | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
api-gateway               | 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
api-gateway               | 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
api-gateway               | 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
api-gateway               | 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
api-gateway               | 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
api-gateway               | 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
api-gateway               | 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
api-gateway               | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
api-gateway               | 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
api-gateway               | 	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
api-gateway               | 	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
api-gateway               | 	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
api-gateway               | 	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:782)
api-gateway               | 	... 22 more
api-gateway               | Caused by: java.net.ConnectException: Connection refused
api-gateway               | 	at java.base/sun.nio.ch.Net.connect0(Native Method)
api-gateway               | 	at java.base/sun.nio.ch.Net.connect(Net.java:579)
api-gateway               | 	at java.base/sun.nio.ch.Net.connect(Net.java:568)
api-gateway               | 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:585)
api-gateway               | 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
api-gateway               | 	at java.base/java.net.Socket.connect(Socket.java:633)
api-gateway               | 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
api-gateway               | 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
api-gateway               | 	... 35 more
api-gateway               | 
api-gateway               | 2023-03-08 08:31:37.655  WARN 1 --- [nfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: I/O error on POST request for "http://service-discovery-server:8761/eureka/apps/API-GATEWAY-SERVICE": Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to service-discovery-server:8761 [service-discovery-server/172.20.0.2] failed: Connection refused
api-gateway               | 2023-03-08 08:31:37.672  WARN 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 - registration failed Cannot execute request on any known server
api-gateway               | 
api-gateway               | com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
api-gateway               | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
api-gateway               | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
api-gateway               | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
api-gateway               | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
api-gateway               | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
api-gateway               | 
api-gateway               | 2023-03-08 08:31:37.672  WARN 1 --- [nfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator
api-gateway               | 
api-gateway               | com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.10.17.jar!/:1.10.17]
api-gateway               | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
api-gateway               | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
api-gateway               | 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
api-gateway               | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[na:na]
api-gateway               | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[na:na]
api-gateway               | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
api-gateway               | 
service-discovery-server  | 2023-03-08 08:31:37.701  INFO 1 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
api-gateway               | 2023-03-08 08:31:37.732 DEBUG 1 --- [           main] o.s.c.g.filter.GatewayMetricsFilter      : New routes count: 8
service-discovery-server  | 2023-03-08 08:31:37.819  INFO 1 --- [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application SERVICE-DISCOVERY-SERVER with eureka with status UP
service-discovery-server  | 2023-03-08 08:31:37.904  INFO 1 --- [       Thread-9] o.s.c.n.e.server.EurekaServerBootstrap   : isAws returned false
service-discovery-server  | 2023-03-08 08:31:37.906  INFO 1 --- [       Thread-9] o.s.c.n.e.server.EurekaServerBootstrap   : Initialized server context
service-discovery-server  | 2023-03-08 08:31:37.907  INFO 1 --- [       Thread-9] c.n.e.r.PeerAwareInstanceRegistryImpl    : Got 1 instances from neighboring DS node
service-discovery-server  | 2023-03-08 08:31:37.907  INFO 1 --- [       Thread-9] c.n.e.r.PeerAwareInstanceRegistryImpl    : Renew threshold is: 1
service-discovery-server  | 2023-03-08 08:31:37.907  INFO 1 --- [       Thread-9] c.n.e.r.PeerAwareInstanceRegistryImpl    : Changing status to UP
service-discovery-server  | 2023-03-08 08:31:37.971  INFO 1 --- [       Thread-9] e.s.EurekaServerInitializerConfiguration : Started Eureka Server
service-discovery-server  | 2023-03-08 08:31:37.972  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8761 (http) with context path ''
service-discovery-server  | 2023-03-08 08:31:37.973  INFO 1 --- [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8761
api-gateway               | 2023-03-08 08:31:38.008  INFO 1 --- [           main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080
api-gateway               | 2023-03-08 08:31:38.010  INFO 1 --- [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
api-gateway               | 2023-03-08 08:31:38.076 DEBUG 1 --- [           main] o.s.c.g.filter.GatewayMetricsFilter      : New routes count: 8
api-gateway               | 2023-03-08 08:31:38.089  INFO 1 --- [           main] c.b.apigateway.ApiGatewayApplication     : Started ApiGatewayApplication in 20.762 seconds (JVM running for 23.421)
service-discovery-server  | 2023-03-08 08:31:38.102  INFO 1 --- [           main] c.b.s.ServiceDiscoveryServerApplication  : Started ServiceDiscoveryServerApplication in 23.733 seconds (JVM running for 25.068)
user-service              | 2023-03-08 08:31:38.503  WARN 1 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
broker                    | [2023-03-08 08:31:38,650] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:31:38,651] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
profile-service           | 2023-03-08 08:31:38.835  WARN 1 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
user-service              | 2023-03-08 08:31:39.317  INFO 1 --- [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
user-service              | 2023-03-08 08:31:39.487  WARN 1 --- [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
user-service              | 2023-03-08 08:31:39.535  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 34387 (http) with context path ''
user-service              | 2023-03-08 08:31:39.537  INFO 1 --- [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 34387
user-service              | 2023-03-08 08:31:39.544  INFO 1 --- [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
profile-service           | 2023-03-08 08:31:39.567  INFO 1 --- [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
user-service              | 2023-03-08 08:31:39.684  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
user-service              | 2023-03-08 08:31:39.692  INFO 1 --- [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
user-service              | 2023-03-08 08:31:39.734  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
user-service              | 2023-03-08 08:31:39.734  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
user-service              | 2023-03-08 08:31:39.734  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
user-service              | 2023-03-08 08:31:39.734  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
user-service              | 2023-03-08 08:31:39.734  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
user-service              | 2023-03-08 08:31:39.734  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
user-service              | 2023-03-08 08:31:39.734  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
profile-service           | 2023-03-08 08:31:39.763  WARN 1 --- [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
profile-service           | 2023-03-08 08:31:39.807  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 35959 (http) with context path ''
profile-service           | 2023-03-08 08:31:39.810  INFO 1 --- [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 35959
profile-service           | 2023-03-08 08:31:39.819  INFO 1 --- [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
profile-service           | 2023-03-08 08:31:39.966  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
profile-service           | 2023-03-08 08:31:39.986  INFO 1 --- [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
profile-service           | 2023-03-08 08:31:40.021  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
profile-service           | 2023-03-08 08:31:40.021  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
profile-service           | 2023-03-08 08:31:40.021  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
profile-service           | 2023-03-08 08:31:40.021  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
profile-service           | 2023-03-08 08:31:40.021  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
profile-service           | 2023-03-08 08:31:40.021  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
profile-service           | 2023-03-08 08:31:40.021  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
service-discovery-server  | 2023-03-08 08:31:40.374  INFO 1 --- [nio-8761-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
service-discovery-server  | 2023-03-08 08:31:40.374  INFO 1 --- [nio-8761-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
service-discovery-server  | 2023-03-08 08:31:40.376  INFO 1 --- [nio-8761-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
user-service              | 2023-03-08 08:31:40.517  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : The response status is 200
user-service              | 2023-03-08 08:31:40.527  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
user-service              | 2023-03-08 08:31:40.532  INFO 1 --- [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
user-service              | 2023-03-08 08:31:40.540  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1678264300539 with initial instances count: 0
user-service              | 2023-03-08 08:31:40.543  INFO 1 --- [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application USER-SERVICE with eureka with status UP
user-service              | 2023-03-08 08:31:40.545  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264300545, current=UP, previous=STARTING]
user-service              | 2023-03-08 08:31:40.547  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_USER-SERVICE/6d8b98f693b9:user-service:0: registering service...
user-service              | 2023-03-08 08:31:40.583  INFO 1 --- [           main] c.b.userservice.UserServiceApplication   : Started UserServiceApplication in 22.825 seconds (JVM running for 25.97)
profile-service           | 2023-03-08 08:31:40.618  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : The response status is 200
profile-service           | 2023-03-08 08:31:40.624  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
profile-service           | 2023-03-08 08:31:40.629  INFO 1 --- [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
profile-service           | 2023-03-08 08:31:40.643  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1678264300641 with initial instances count: 0
profile-service           | 2023-03-08 08:31:40.647  INFO 1 --- [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application PROFILE-SERVICE with eureka with status UP
profile-service           | 2023-03-08 08:31:40.648  INFO 1 --- [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264300648, current=UP, previous=STARTING]
profile-service           | 2023-03-08 08:31:40.650  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PROFILE-SERVICE/6b69458746a0:profile-service:0: registering service...
profile-service           | 2023-03-08 08:31:40.677  INFO 1 --- [           main] c.b.p.ProfileServiceApplication          : Started ProfileServiceApplication in 23.354 seconds (JVM running for 26.316)
service-discovery-server  | 2023-03-08 08:31:40.763  INFO 1 --- [nio-8761-exec-3] c.n.e.registry.AbstractInstanceRegistry  : Registered instance USER-SERVICE/6d8b98f693b9:user-service:0 with status UP (replication=false)
user-service              | 2023-03-08 08:31:40.765  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_USER-SERVICE/6d8b98f693b9:user-service:0 - registration status: 204
service-discovery-server  | 2023-03-08 08:31:40.763  INFO 1 --- [nio-8761-exec-4] c.n.e.registry.AbstractInstanceRegistry  : Registered instance PROFILE-SERVICE/6b69458746a0:profile-service:0 with status UP (replication=false)
profile-service           | 2023-03-08 08:31:40.767  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PROFILE-SERVICE/6b69458746a0:profile-service:0 - registration status: 204
prime-service             | 2023-03-08 08:32:04.077  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
prime-service             | 2023-03-08 08:32:04.077  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
prime-service             | 2023-03-08 08:32:04.077  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
prime-service             | 2023-03-08 08:32:04.077  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
prime-service             | 2023-03-08 08:32:04.077  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
prime-service             | 2023-03-08 08:32:04.077  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
prime-service             | 2023-03-08 08:32:04.077  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
netflix-service           | 2023-03-08 08:32:04.102  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
netflix-service           | 2023-03-08 08:32:04.102  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
netflix-service           | 2023-03-08 08:32:04.102  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
netflix-service           | 2023-03-08 08:32:04.102  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
netflix-service           | 2023-03-08 08:32:04.102  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
netflix-service           | 2023-03-08 08:32:04.102  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
netflix-service           | 2023-03-08 08:32:04.102  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
service-discovery-server  | 2023-03-08 08:32:04.106  WARN 1 --- [nio-8761-exec-6] c.n.e.registry.AbstractInstanceRegistry  : DS: Registry: lease doesn't exist, registering resource: PRIME-SERVICE - c7be847abe5f:prime-service
service-discovery-server  | 2023-03-08 08:32:04.106  WARN 1 --- [nio-8761-exec-6] c.n.eureka.resources.InstanceResource    : Not Found (Renew): PRIME-SERVICE - c7be847abe5f:prime-service
prime-service             | 2023-03-08 08:32:04.112  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service - Re-registering apps/PRIME-SERVICE
prime-service             | 2023-03-08 08:32:04.113  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service: registering service...
service-discovery-server  | 2023-03-08 08:32:04.122  INFO 1 --- [nio-8761-exec-7] c.n.e.registry.AbstractInstanceRegistry  : Registered instance PRIME-SERVICE/c7be847abe5f:prime-service with status UP (replication=false)
prime-service             | 2023-03-08 08:32:04.123  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service - registration status: 204
service-discovery-server  | 2023-03-08 08:32:04.126  WARN 1 --- [nio-8761-exec-9] c.n.e.registry.AbstractInstanceRegistry  : DS: Registry: lease doesn't exist, registering resource: NETFLIX-SERVICE - c219c4b97707:netflix-service:0
service-discovery-server  | 2023-03-08 08:32:04.126  WARN 1 --- [nio-8761-exec-9] c.n.eureka.resources.InstanceResource    : Not Found (Renew): NETFLIX-SERVICE - c219c4b97707:netflix-service:0
prime-service             | 2023-03-08 08:32:04.129  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
netflix-service           | 2023-03-08 08:32:04.139  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0 - Re-registering apps/NETFLIX-SERVICE
netflix-service           | 2023-03-08 08:32:04.139  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0: registering service...
service-discovery-server  | 2023-03-08 08:32:04.147  INFO 1 --- [io-8761-exec-10] c.n.e.registry.AbstractInstanceRegistry  : Registered instance NETFLIX-SERVICE/c219c4b97707:netflix-service:0 with status UP (replication=false)
netflix-service           | 2023-03-08 08:32:04.148  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0 - registration status: 204
netflix-service           | 2023-03-08 08:32:04.154  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
google-service            | 2023-03-08 08:32:04.942  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
google-service            | 2023-03-08 08:32:04.942  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
google-service            | 2023-03-08 08:32:04.942  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
google-service            | 2023-03-08 08:32:04.942  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
google-service            | 2023-03-08 08:32:04.942  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
google-service            | 2023-03-08 08:32:04.942  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
google-service            | 2023-03-08 08:32:04.942  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
service-discovery-server  | 2023-03-08 08:32:04.967  WARN 1 --- [nio-8761-exec-2] c.n.e.registry.AbstractInstanceRegistry  : DS: Registry: lease doesn't exist, registering resource: GOOGLE-SERVICE - 706bbfb20247:google-service:9191
service-discovery-server  | 2023-03-08 08:32:04.967  WARN 1 --- [nio-8761-exec-2] c.n.eureka.resources.InstanceResource    : Not Found (Renew): GOOGLE-SERVICE - 706bbfb20247:google-service:9191
google-service            | 2023-03-08 08:32:04.976  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191 - Re-registering apps/GOOGLE-SERVICE
google-service            | 2023-03-08 08:32:04.977  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191: registering service...
service-discovery-server  | 2023-03-08 08:32:04.983  INFO 1 --- [nio-8761-exec-3] c.n.e.registry.AbstractInstanceRegistry  : Registered instance GOOGLE-SERVICE/706bbfb20247:google-service:9191 with status UP (replication=false)
google-service            | 2023-03-08 08:32:04.984  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191 - registration status: 204
google-service            | 2023-03-08 08:32:04.989  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
api-gateway               | 2023-03-08 08:32:07.480  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
api-gateway               | 2023-03-08 08:32:07.480  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
api-gateway               | 2023-03-08 08:32:07.480  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
api-gateway               | 2023-03-08 08:32:07.480  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
api-gateway               | 2023-03-08 08:32:07.480  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
api-gateway               | 2023-03-08 08:32:07.480  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
api-gateway               | 2023-03-08 08:32:07.480  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
service-discovery-server  | 2023-03-08 08:32:07.506  WARN 1 --- [nio-8761-exec-5] c.n.e.registry.AbstractInstanceRegistry  : DS: Registry: lease doesn't exist, registering resource: API-GATEWAY-SERVICE - f266cb0c59bb:api-gateway-service:8080
service-discovery-server  | 2023-03-08 08:32:07.506  WARN 1 --- [nio-8761-exec-5] c.n.eureka.resources.InstanceResource    : Not Found (Renew): API-GATEWAY-SERVICE - f266cb0c59bb:api-gateway-service:8080
api-gateway               | 2023-03-08 08:32:07.515  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 - Re-registering apps/API-GATEWAY-SERVICE
api-gateway               | 2023-03-08 08:32:07.515  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080: registering service...
service-discovery-server  | 2023-03-08 08:32:07.522  INFO 1 --- [nio-8761-exec-6] c.n.e.registry.AbstractInstanceRegistry  : Registered instance API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 with status UP (replication=false)
api-gateway               | 2023-03-08 08:32:07.529  INFO 1 --- [tbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 - registration status: 204
api-gateway               | 2023-03-08 08:32:07.538  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
api-gateway               | 2023-03-08 08:32:07.545 DEBUG 1 --- [freshExecutor-0] o.s.c.g.filter.GatewayMetricsFilter      : New routes count: 8
user-service              | 2023-03-08 08:32:10.527  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
user-service              | 2023-03-08 08:32:10.527  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
user-service              | 2023-03-08 08:32:10.527  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
user-service              | 2023-03-08 08:32:10.527  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
user-service              | 2023-03-08 08:32:10.527  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
user-service              | 2023-03-08 08:32:10.527  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
user-service              | 2023-03-08 08:32:10.527  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
user-service              | 2023-03-08 08:32:10.542  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
profile-service           | 2023-03-08 08:32:10.624  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
profile-service           | 2023-03-08 08:32:10.624  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
profile-service           | 2023-03-08 08:32:10.624  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
profile-service           | 2023-03-08 08:32:10.624  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
profile-service           | 2023-03-08 08:32:10.624  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
profile-service           | 2023-03-08 08:32:10.624  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
profile-service           | 2023-03-08 08:32:10.625  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
profile-service           | 2023-03-08 08:32:10.638  INFO 1 --- [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
user-service              | 2023-03-08 08:32:12.128  INFO 1 --- [ionShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application USER-SERVICE with eureka with status DOWN
user-service              | 2023-03-08 08:32:12.128  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264332128, current=DOWN, previous=UP]
user-service              | 2023-03-08 08:32:12.129  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_USER-SERVICE/6d8b98f693b9:user-service:0: registering service...
prime-service             | 2023-03-08 08:32:12.128  INFO 1 --- [ionShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application PRIME-SERVICE with eureka with status DOWN
prime-service             | 2023-03-08 08:32:12.128  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264332128, current=DOWN, previous=UP]
prime-service             | 2023-03-08 08:32:12.129  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service: registering service...
api-gateway               | 2023-03-08 08:32:12.132  INFO 1 --- [ionShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application API-GATEWAY-SERVICE with eureka with status DOWN
api-gateway               | 2023-03-08 08:32:12.132  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264332132, current=DOWN, previous=UP]
service-discovery-server  | 2023-03-08 08:32:12.133  INFO 1 --- [nio-8761-exec-1] c.n.e.registry.AbstractInstanceRegistry  : Registered instance USER-SERVICE/6d8b98f693b9:user-service:0 with status DOWN (replication=false)
api-gateway               | 2023-03-08 08:32:12.134  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080: registering service...
service-discovery-server  | 2023-03-08 08:32:12.134  INFO 1 --- [nio-8761-exec-2] c.n.e.registry.AbstractInstanceRegistry  : Registered instance NETFLIX-SERVICE/c219c4b97707:netflix-service:0 with status DOWN (replication=false)
broker                    | [2023-03-08 08:32:12,127] INFO Terminating process due to signal SIGTERM (org.apache.kafka.common.utils.LoggingSignalHandler)
netflix-service           | 2023-03-08 08:32:12.128  INFO 1 --- [ionShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application NETFLIX-SERVICE with eureka with status DOWN
netflix-service           | 2023-03-08 08:32:12.128  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264332128, current=DOWN, previous=UP]
netflix-service           | 2023-03-08 08:32:12.128  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0: registering service...
netflix-service           | 2023-03-08 08:32:12.135  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0 - registration status: 204
user-service              | 2023-03-08 08:32:12.135  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_USER-SERVICE/6d8b98f693b9:user-service:0 - registration status: 204
prime-service             | 2023-03-08 08:32:12.141  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service - registration status: 204
service-discovery-server  | 2023-03-08 08:32:12.139  INFO 1 --- [nio-8761-exec-3] c.n.e.registry.AbstractInstanceRegistry  : Registered instance PRIME-SERVICE/c7be847abe5f:prime-service with status DOWN (replication=false)
service-discovery-server  | 2023-03-08 08:32:12.139  INFO 1 --- [nio-8761-exec-4] c.n.e.registry.AbstractInstanceRegistry  : Registered instance API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 with status DOWN (replication=false)
api-gateway               | 2023-03-08 08:32:12.141  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 - registration status: 204
broker                    | [2023-03-08 08:32:12,137] INFO [KafkaServer id=1] shutting down (kafka.server.KafkaServer)
broker                    | [2023-03-08 08:32:12,143] INFO [KafkaServer id=1] Starting controlled shutdown (kafka.server.KafkaServer)
profile-service           | 2023-03-08 08:32:12.151  INFO 1 --- [ionShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application PROFILE-SERVICE with eureka with status DOWN
profile-service           | 2023-03-08 08:32:12.151  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264332151, current=DOWN, previous=UP]
profile-service           | 2023-03-08 08:32:12.151  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PROFILE-SERVICE/6b69458746a0:profile-service:0: registering service...
service-discovery-server  | 2023-03-08 08:32:12.154  INFO 1 --- [nio-8761-exec-5] c.n.e.registry.AbstractInstanceRegistry  : Registered instance GOOGLE-SERVICE/706bbfb20247:google-service:9191 with status DOWN (replication=false)
google-service            | 2023-03-08 08:32:12.147  INFO 1 --- [ionShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application GOOGLE-SERVICE with eureka with status DOWN
google-service            | 2023-03-08 08:32:12.147  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1678264332147, current=DOWN, previous=UP]
google-service            | 2023-03-08 08:32:12.147  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191: registering service...
service-discovery-server  | 2023-03-08 08:32:12.156  INFO 1 --- [nio-8761-exec-6] c.n.e.registry.AbstractInstanceRegistry  : Registered instance PROFILE-SERVICE/6b69458746a0:profile-service:0 with status DOWN (replication=false)
google-service            | 2023-03-08 08:32:12.156  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191 - registration status: 204
profile-service           | 2023-03-08 08:32:12.158  INFO 1 --- [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PROFILE-SERVICE/6b69458746a0:profile-service:0 - registration status: 204
broker                    | [2023-03-08 08:32:12,160] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:32:12,161] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:32:12,161] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:32:12,164] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
broker                    | [2023-03-08 08:32:12,165] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
prime-service             | 2023-03-08 08:32:12.168  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
broker                    | [2023-03-08 08:32:12,171] INFO [KafkaServer id=1] Controlled shutdown request returned successfully after 16ms (kafka.server.KafkaServer)
broker                    | [2023-03-08 08:32:12,175] INFO [/config/changes-event-process-thread]: Shutting down (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
broker                    | [2023-03-08 08:32:12,175] INFO [/config/changes-event-process-thread]: Shutdown completed (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
broker                    | [2023-03-08 08:32:12,175] INFO [/config/changes-event-process-thread]: Stopped (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
broker                    | [2023-03-08 08:32:12,176] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Stopping socket server request processors (kafka.network.SocketServer)
user-service              | 2023-03-08 08:32:12.188  INFO 1 --- [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
user-service              | 2023-03-08 08:32:12.191  INFO 1 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
google-service            | 2023-03-08 08:32:12.196  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
broker                    | [2023-03-08 08:32:12,198] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Stopped socket server request processors (kafka.network.SocketServer)
broker                    | [2023-03-08 08:32:12,200] INFO [data-plane Kafka Request Handler on Broker 1], shutting down (kafka.server.KafkaRequestHandlerPool)
netflix-service           | 2023-03-08 08:32:12.201  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
user-service              | 2023-03-08 08:32:12.205  INFO 1 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
user-service              | 2023-03-08 08:32:12.205  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
profile-service           | 2023-03-08 08:32:12.206  INFO 1 --- [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
profile-service           | 2023-03-08 08:32:12.207  INFO 1 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
broker                    | [2023-03-08 08:32:12,209] INFO [data-plane Kafka Request Handler on Broker 1], shut down completely (kafka.server.KafkaRequestHandlerPool)
profile-service           | 2023-03-08 08:32:12.212  INFO 1 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
profile-service           | 2023-03-08 08:32:12.213  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
broker                    | [2023-03-08 08:32:12,214] INFO [ExpirationReaper-1-AlterAcls]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,216] INFO [ExpirationReaper-1-AlterAcls]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,216] INFO [ExpirationReaper-1-AlterAcls]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,216] INFO [KafkaApi-1] Shutdown complete. (kafka.server.KafkaApis)
broker                    | [2023-03-08 08:32:12,217] INFO [ExpirationReaper-1-topic]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,217] INFO [ExpirationReaper-1-topic]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,217] INFO [ExpirationReaper-1-topic]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,219] INFO [TransactionCoordinator id=1] Shutting down. (kafka.coordinator.transaction.TransactionCoordinator)
broker                    | [2023-03-08 08:32:12,219] INFO [Transaction State Manager 1]: Shutdown complete (kafka.coordinator.transaction.TransactionStateManager)
broker                    | [2023-03-08 08:32:12,219] INFO [Transaction Marker Channel Manager 1]: Shutting down (kafka.coordinator.transaction.TransactionMarkerChannelManager)
broker                    | [2023-03-08 08:32:12,220] INFO [Transaction Marker Channel Manager 1]: Stopped (kafka.coordinator.transaction.TransactionMarkerChannelManager)
broker                    | [2023-03-08 08:32:12,220] INFO [Transaction Marker Channel Manager 1]: Shutdown completed (kafka.coordinator.transaction.TransactionMarkerChannelManager)
broker                    | [2023-03-08 08:32:12,220] INFO [TransactionCoordinator id=1] Shutdown complete. (kafka.coordinator.transaction.TransactionCoordinator)
broker                    | [2023-03-08 08:32:12,221] INFO [GroupCoordinator 1]: Shutting down. (kafka.coordinator.group.GroupCoordinator)
broker                    | [2023-03-08 08:32:12,221] INFO [ExpirationReaper-1-Heartbeat]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,221] INFO [ExpirationReaper-1-Heartbeat]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,221] INFO [ExpirationReaper-1-Heartbeat]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,222] INFO [ExpirationReaper-1-Rebalance]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,222] INFO [ExpirationReaper-1-Rebalance]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,222] INFO [ExpirationReaper-1-Rebalance]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,223] INFO [GroupCoordinator 1]: Shutdown complete. (kafka.coordinator.group.GroupCoordinator)
broker                    | [2023-03-08 08:32:12,223] INFO [ReplicaManager broker=1] Shutting down (kafka.server.ReplicaManager)
broker                    | [2023-03-08 08:32:12,224] INFO [LogDirFailureHandler]: Shutting down (kafka.server.ReplicaManager$LogDirFailureHandler)
broker                    | [2023-03-08 08:32:12,224] INFO [LogDirFailureHandler]: Stopped (kafka.server.ReplicaManager$LogDirFailureHandler)
broker                    | [2023-03-08 08:32:12,224] INFO [LogDirFailureHandler]: Shutdown completed (kafka.server.ReplicaManager$LogDirFailureHandler)
broker                    | [2023-03-08 08:32:12,224] INFO [ReplicaFetcherManager on broker 1] shutting down (kafka.server.ReplicaFetcherManager)
broker                    | [2023-03-08 08:32:12,225] INFO [ReplicaFetcherManager on broker 1] shutdown completed (kafka.server.ReplicaFetcherManager)
broker                    | [2023-03-08 08:32:12,226] INFO [ReplicaAlterLogDirsManager on broker 1] shutting down (kafka.server.ReplicaAlterLogDirsManager)
broker                    | [2023-03-08 08:32:12,226] INFO [ReplicaAlterLogDirsManager on broker 1] shutdown completed (kafka.server.ReplicaAlterLogDirsManager)
broker                    | [2023-03-08 08:32:12,226] INFO [ExpirationReaper-1-Fetch]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,226] INFO [ExpirationReaper-1-Fetch]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,226] INFO [ExpirationReaper-1-Fetch]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,226] INFO [ExpirationReaper-1-Produce]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,227] INFO [ExpirationReaper-1-Produce]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,227] INFO [ExpirationReaper-1-Produce]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,227] INFO [ExpirationReaper-1-DeleteRecords]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,227] INFO [ExpirationReaper-1-DeleteRecords]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,227] INFO [ExpirationReaper-1-DeleteRecords]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,228] INFO [ExpirationReaper-1-ElectLeader]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,228] INFO [ExpirationReaper-1-ElectLeader]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,228] INFO [ExpirationReaper-1-ElectLeader]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
broker                    | [2023-03-08 08:32:12,234] INFO [ReplicaManager broker=1] Shut down completely (kafka.server.ReplicaManager)
broker                    | [2023-03-08 08:32:12,234] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Shutting down (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:32:12,234] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Stopped (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:32:12,234] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Shutdown completed (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:32:12,236] INFO Broker to controller channel manager for alterPartition shutdown (kafka.server.BrokerToControllerChannelManagerImpl)
broker                    | [2023-03-08 08:32:12,236] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Shutting down (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:32:12,237] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Stopped (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:32:12,237] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Shutdown completed (kafka.server.BrokerToControllerRequestThread)
broker                    | [2023-03-08 08:32:12,237] INFO Broker to controller channel manager for forwarding shutdown (kafka.server.BrokerToControllerChannelManagerImpl)
broker                    | [2023-03-08 08:32:12,237] INFO Shutting down. (kafka.log.LogManager)
broker                    | [2023-03-08 08:32:12,238] INFO Shutting down the log cleaner. (kafka.log.LogCleaner)
broker                    | [2023-03-08 08:32:12,238] INFO [kafka-log-cleaner-thread-0]: Shutting down (kafka.log.LogCleaner)
broker                    | [2023-03-08 08:32:12,239] INFO [kafka-log-cleaner-thread-0]: Stopped (kafka.log.LogCleaner)
broker                    | [2023-03-08 08:32:12,239] INFO [kafka-log-cleaner-thread-0]: Shutdown completed (kafka.log.LogCleaner)
broker                    | [2023-03-08 08:32:12,245] INFO Shutdown complete. (kafka.log.LogManager)
broker                    | [2023-03-08 08:32:12,246] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
broker                    | [2023-03-08 08:32:12,246] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
broker                    | [2023-03-08 08:32:12,246] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
broker                    | [2023-03-08 08:32:12,247] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:32:12,247] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:32:12,248] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
broker                    | [2023-03-08 08:32:12,248] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
broker                    | [2023-03-08 08:32:12,249] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
broker                    | [2023-03-08 08:32:12,249] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
broker                    | [2023-03-08 08:32:12,249] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
broker                    | [2023-03-08 08:32:12,250] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
broker                    | [2023-03-08 08:32:12,251] INFO [feature-zk-node-event-process-thread]: Shutting down (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
broker                    | [2023-03-08 08:32:12,251] INFO [feature-zk-node-event-process-thread]: Shutdown completed (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
broker                    | [2023-03-08 08:32:12,251] INFO [feature-zk-node-event-process-thread]: Stopped (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
broker                    | [2023-03-08 08:32:12,252] INFO [ZooKeeperClient Kafka server] Closing. (kafka.zookeeper.ZooKeeperClient)
broker                    | [2023-03-08 08:32:12,355] INFO Session: 0x100006029e70001 closed (org.apache.zookeeper.ZooKeeper)
broker                    | [2023-03-08 08:32:12,355] INFO EventThread shut down for session: 0x100006029e70001 (org.apache.zookeeper.ClientCnxn)
broker                    | [2023-03-08 08:32:12,356] INFO [ZooKeeperClient Kafka server] Closed. (kafka.zookeeper.ZooKeeperClient)
broker                    | [2023-03-08 08:32:12,356] INFO [ThrottledChannelReaper-Fetch]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-Fetch]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-Fetch]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-Produce]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-Produce]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-Produce]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-Request]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-Request]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-Request]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-ControllerMutation]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-ControllerMutation]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,357] INFO [ThrottledChannelReaper-ControllerMutation]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
broker                    | [2023-03-08 08:32:12,358] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Shutting down socket server (kafka.network.SocketServer)
broker                    | [2023-03-08 08:32:12,376] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Shutdown completed (kafka.network.SocketServer)
broker                    | [2023-03-08 08:32:12,377] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
broker                    | [2023-03-08 08:32:12,377] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
broker                    | [2023-03-08 08:32:12,377] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
broker                    | [2023-03-08 08:32:12,378] INFO Broker and topic stats closed (kafka.server.BrokerTopicStats)
broker                    | [2023-03-08 08:32:12,378] INFO App info kafka.server for 1 unregistered (org.apache.kafka.common.utils.AppInfoParser)
broker                    | [2023-03-08 08:32:12,378] INFO [KafkaServer id=1] shut down completed (kafka.server.KafkaServer)
broker exited with code 0
broker exited with code 143
pgadmin4_container exited with code 0
pgadmin4_container exited with code 0
zookeeper exited with code 0
zookeeper exited with code 143
api-gateway               | 2023-03-08 08:32:14.173  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
prime-service             | 2023-03-08 08:32:15.169  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
service-discovery-server  | 2023-03-08 08:32:15.174  INFO 1 --- [nio-8761-exec-7] c.n.e.registry.AbstractInstanceRegistry  : Cancelled instance PRIME-SERVICE/c7be847abe5f:prime-service (replication=false)
prime-service             | 2023-03-08 08:32:15.175  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRIME-SERVICE/c7be847abe5f:prime-service - deregister  status: 200
prime-service             | 2023-03-08 08:32:15.179  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
google-service            | 2023-03-08 08:32:15.197  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
service-discovery-server  | 2023-03-08 08:32:15.202  INFO 1 --- [nio-8761-exec-8] c.n.e.registry.AbstractInstanceRegistry  : Cancelled instance GOOGLE-SERVICE/706bbfb20247:google-service:9191 (replication=false)
netflix-service           | 2023-03-08 08:32:15.203  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
google-service            | 2023-03-08 08:32:15.204  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_GOOGLE-SERVICE/706bbfb20247:google-service:9191 - deregister  status: 200
user-service              | 2023-03-08 08:32:15.207  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
service-discovery-server  | 2023-03-08 08:32:15.209  INFO 1 --- [nio-8761-exec-9] c.n.e.registry.AbstractInstanceRegistry  : Cancelled instance NETFLIX-SERVICE/c219c4b97707:netflix-service:0 (replication=false)
netflix-service           | 2023-03-08 08:32:15.211  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NETFLIX-SERVICE/c219c4b97707:netflix-service:0 - deregister  status: 200
google-service            | 2023-03-08 08:32:15.211  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
profile-service           | 2023-03-08 08:32:15.216  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
user-service              | 2023-03-08 08:32:15.216  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_USER-SERVICE/6d8b98f693b9:user-service:0 - deregister  status: 200
service-discovery-server  | 2023-03-08 08:32:15.215  INFO 1 --- [nio-8761-exec-2] c.n.e.registry.AbstractInstanceRegistry  : Cancelled instance USER-SERVICE/6d8b98f693b9:user-service:0 (replication=false)
netflix-service           | 2023-03-08 08:32:15.219  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
service-discovery-server  | 2023-03-08 08:32:15.221  INFO 1 --- [nio-8761-exec-4] c.n.e.registry.AbstractInstanceRegistry  : Cancelled instance PROFILE-SERVICE/6b69458746a0:profile-service:0 (replication=false)
profile-service           | 2023-03-08 08:32:15.224  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PROFILE-SERVICE/6b69458746a0:profile-service:0 - deregister  status: 200
user-service              | 2023-03-08 08:32:15.224  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
profile-service           | 2023-03-08 08:32:15.230  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
prime-service exited with code 0
prime-service exited with code 143
netflix-service exited with code 0
netflix-service exited with code 143
user-service exited with code 0
user-service exited with code 143
google-service exited with code 0
google-service exited with code 143
profile-service exited with code 0
profile-service exited with code 143
postgres exited with code 0
postgres exited with code 0
api-gateway               | 2023-03-08 08:32:17.175  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
service-discovery-server  | 2023-03-08 08:32:17.178  INFO 1 --- [nio-8761-exec-2] c.n.e.registry.AbstractInstanceRegistry  : Cancelled instance API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 (replication=false)
api-gateway               | 2023-03-08 08:32:17.179  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY-SERVICE/f266cb0c59bb:api-gateway-service:8080 - deregister  status: 200
api-gateway               | 2023-03-08 08:32:17.185  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
api-gateway exited with code 0
api-gateway exited with code 143
service-discovery-server  | 2023-03-08 08:32:17.536  INFO 1 --- [ionShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application SERVICE-DISCOVERY-SERVER with eureka with status DOWN
service-discovery-server  | 2023-03-08 08:32:17.546  INFO 1 --- [ionShutdownHook] o.s.c.n.e.server.EurekaServerBootstrap   : Shutting down Eureka Server..
service-discovery-server  | 2023-03-08 08:32:17.551  INFO 1 --- [ionShutdownHook] c.n.eureka.DefaultEurekaServerContext    : Shutting down ...
service-discovery-server  | 2023-03-08 08:32:17.560  INFO 1 --- [ionShutdownHook] c.n.eureka.DefaultEurekaServerContext    : Shut down
service-discovery-server  | 2023-03-08 08:32:17.560  INFO 1 --- [ionShutdownHook] o.s.c.n.e.server.EurekaServerBootstrap   : Eureka Service is now shutdown...
service-discovery-server  | 2023-03-08 08:32:17.560  INFO 1 --- [ionShutdownHook] c.n.eureka.DefaultEurekaServerContext    : Shutting down ...
service-discovery-server  | 2023-03-08 08:32:17.564  INFO 1 --- [ionShutdownHook] c.n.eureka.DefaultEurekaServerContext    : Shut down
service-discovery-server  | 2023-03-08 08:32:17.569  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
service-discovery-server  | 2023-03-08 08:32:17.570  INFO 1 --- [ionShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
service-discovery-server exited with code 0
